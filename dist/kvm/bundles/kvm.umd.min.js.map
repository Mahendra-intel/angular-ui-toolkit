{"version":3,"sources":["../../../projects/kvm/src/lib/kvm.service.ts","../../../projects/kvm/src/environments/environment.ts","../../../projects/kvm/src/lib/kvm.component.ts","../../../projects/kvm/src/lib/kvm.component.html","../../../projects/kvm/src/lib/app/device-toolbar/device-toolbar.component.ts","../../../projects/kvm/src/lib/app/device-toolbar/device-toolbar.component.html","../../../projects/kvm/src/lib/kvm.module.ts"],"names":["KvmService","factory","ɵfac","providedIn","Injectable","environment","production","mpsServer","rpsServer","KvmComponent","this","width","height","deviceState","deviceStatus","EventEmitter","powerState","btnText","isPoweredOn","isLoading","deviceId","selected","server","replace","previousAction","selectedAction","mouseMove","encodings","value","viewValue","console","log","includes","prototype","ngOnInit","logger","ConsoleLogger","ngDoCheck","onMouseup","event","mouseHelper","mouseup","onMousedown","mousedown","selectors","viewQuery","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵlistener","$event","i0.ɵɵadvance","i0.ɵɵproperty","Component","selector","templateUrl","styles","canvas","ViewChild","static","Input","Output","DeviceToolbarComponent","decls","vars","template","styleUrls","KvmModule","declarations","exports","NgModule","imports","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KvmService {\n\n  constructor() { }\n}\n","export const environment = {\r\n    production: false,\r\n    mpsServer: 'https://localhost/mps',\r\n    rpsServer: 'https://localhost/rps' \r\n}","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ConsoleLogger,\n  IDataProcessor,\n  ILogger,\n  KeyBoardHelper,\n  MouseHelper,\n} from '@open-amt-cloud-toolkit/ui-toolkit/core';\nimport { environment } from '../environments/environment';\nimport { Subscription } from 'rxjs';\n// import { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'amt-kvm',\n  templateUrl: './kvm.component.html',\n  styles: [],\n})\nexport class KvmComponent implements OnInit {\n  @ViewChild('canvas', { static: false }) canvas: ElementRef | undefined;\n  public context!: CanvasRenderingContext2D;\n\n  // //setting a width and height for the canvas\n\n  @Input() public width = 400;\n  @Input() public height = 400;\n  @Output() deviceState: number = 0;\n  @Output() deviceStatus: EventEmitter<number> = new EventEmitter<number>();\n  stopSocketSubscription!: Subscription;\n  startSocketSubscription!: Subscription;\n  module: any;\n  redirector: any;\n  dataProcessor!: IDataProcessor | null;\n  mouseHelper!: MouseHelper;\n  keyboardHelper!: KeyBoardHelper;\n  logger!: ILogger;\n  powerState: any = 0;\n  btnText: string = 'Disconnect';\n  isPoweredOn: boolean = false;\n  isLoading: boolean = false;\n  deviceId: string = '';\n  selected: number = 1;\n  timeInterval!: any;\n  server: string = `${environment.mpsServer.replace('http', 'ws')}/relay`;\n  previousAction = 'kvm';\n  selectedAction = '';\n  mouseMove: any = null;\n\n  encodings = [\n    { value: 1, viewValue: 'RLE 8' },\n    { value: 2, viewValue: 'RLE 16' },\n  ];\n\n  constructor() {\n    console.log('comming inside with new bundle files');\n    if (environment.mpsServer.includes('/mps')) {\n      //handles kong route\n      this.server = `${environment.mpsServer.replace('http', 'ws')}/ws/relay`;\n    }\n  }\n  // ngOnDestroy(): void {\n  //   throw new Error('Method not implemented.');\n  // }\n  // ngAfterViewInit(): void {\n  //   throw new Error('Method not implemented.');\n  // }\n\n  ngOnInit(): void {\n    this.logger = new ConsoleLogger(1)\n  }\n\n  ngDoCheck(): void {\n    if (this.selectedAction !== this.previousAction) {\n      this.previousAction = this.selectedAction;\n    }\n  }\n\n  onMouseup(event: MouseEvent): void {\n    if (this.mouseHelper != null) {\n      this.mouseHelper.mouseup(event)\n    }\n  }\n\n  onMousedown(event: MouseEvent): void {\n    if (this.mouseHelper != null) {\n      this.mouseHelper.mousedown(event)\n    }\n  }\n}\n","<!-- <amt-device-toolbar></amt-device-toolbar> -->\r\n<div>\r\n    <button style=\"display: block;\"> connect </button>\r\n    <canvas class=\"canvas\" #canvas [width]=\"width\" [height]=\"height\" oncontextmenu=\"return false\" (mouseup)=\"onMouseup($event)\" (mousedown)=\"onMousedown($event)\"></canvas>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'amt-device-toolbar',\n  templateUrl: './device-toolbar.component.html',\n  styleUrls: ['./device-toolbar.component.css']\n})\nexport class DeviceToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>Device Control</div>\n<div>List</div>\n<button>tv</button>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { KvmComponent } from './kvm.component';\nimport { DeviceToolbarComponent } from './app/device-toolbar/device-toolbar.component';\n\n@NgModule({\n  declarations: [KvmComponent, DeviceToolbarComponent],\n  imports: [],\n  exports: [KvmComponent],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class KvmModule {}\n"]}