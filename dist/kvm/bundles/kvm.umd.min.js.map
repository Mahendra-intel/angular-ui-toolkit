{"version":3,"sources":["../../../projects/kvm/src/environments/environment.ts","../../../projects/kvm/src/lib/kvm.service.ts","../../../projects/kvm/src/lib/kvm.component.ts","../../../projects/kvm/src/lib/kvm.component.html","../../../projects/kvm/src/lib/app/device-toolbar/device-toolbar.component.ts","../../../projects/kvm/src/lib/app/device-toolbar/device-toolbar.component.html","../../../projects/kvm/src/lib/shared/are-you-sure/are-you-sure.component.ts","../../../projects/kvm/src/lib/shared/power-up-alert/power-up-alert.component.ts","../../../projects/kvm/src/lib/shared/power-up-alert/power-up-alert.component.html","../../../projects/kvm/src/lib/shared/dialog-content/dialog-content.component.ts","../../../projects/kvm/src/lib/shared/shared.module.ts","../../../projects/kvm/src/lib/authorize.interceptor.ts","../../../projects/kvm/src/lib/kvm.module.ts"],"names":["environment","production","mpsServer","rpsServer","KvmService","http","this","connectKVMSocket","EventEmitter","stopwebSocket","prototype","setAmtFeatures","deviceId","post","userConsent","enableKVM","enableSOL","enableIDER","pipe","catchError","err","getPowerState","get","sendPowerAction","action","useSOL","payload","method","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","Injectable","KvmComponent","snackBar","dialog","devicesService","params","_this","width","height","deviceState","deviceStatus","deviceConnection","powerState","btnText","isPoweredOn","isLoading","selected","server","replace","previousAction","selectedAction","mouseMove","encodings","value","viewValue","onConnectionStateChange","redirector","state","emit","reset","module","dataProcessor","instantiate","stopKvm","stop","keyboardHelper","UnGrabKeyInput","includes","ngOnInit","logger","ConsoleLogger","subscribe","data","init","ngAfterViewInit","context","_a","canvas","nativeElement","getContext","AMTKvmDataRedirector","Protocol","KVM","FileReader","authToken","AMTDesktop","DataProcessor","mouseHelper","MouseHelper","KeyBoardHelper","onProcessData","processData","bind","onStart","start","onNewState","onStateChange","onSendKvmData","onStateChanged","onError","onRedirectorError","onSend","send","bpp","fromEvent","_b","throttleTime","event","mousemove","setTimeout","autoConnect","WebSocket","GrabKeyInput","onEncodingChange","timer","checkPowerStatus","powerstate","ngDoCheck","onMouseup","mouseup","onMousedown","mousedown","ngOnDestroy","ɵɵdirectiveInject","i1$1","MatSnackBar","i1$2","MatDialog","selectors","viewQuery","rf","ctx","i0.ɵɵelementStart","i0.ɵɵlistener","$event","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵproperty","Component","selector","templateUrl","styleUrls","Inject","ViewChild","static","Input","Output","DeviceToolbarComponent","decls","vars","template","i0.ɵɵtext","AreYouSureDialogComponent","styles","PowerUpAlertComponent","consts","DialogContentComponent","MAT_DIALOG_DATA","OpenAMTMaterialModule","provide","MAT_SNACK_BAR_DEFAULT_OPTIONS","useValue","duration","panelClass","imports","FlexLayoutModule","ReactiveFormsModule","FormsModule","MatNativeDateModule","MatTableModule","MatTreeModule","MatMenuModule","CdkTableModule","MatButtonToggleModule","MatRadioModule","MatSortModule","MatCheckboxModule","MatTooltipModule","MatSnackBarModule","MatExpansionModule","MatGridListModule","MatChipsModule","MatSelectModule","MatListModule","MatCardModule","MatAutocompleteModule","MatStepperModule","MatDialogModule","MatSidenavModule","MatInputModule","MatSlideToggleModule","MatDatepickerModule","MatProgressBarModule","MatProgressSpinnerModule","MatToolbarModule","MatIconModule","MatTabsModule","MatFormFieldModule","MatButtonModule","MatPaginatorModule","declarations","exports","NgModule","providers","SharedModule","forRoot","ngModule","CommonModule","AuthorizeInterceptor","intercept","request","next","clone","setHeaders","Authorization","handle","tap","HttpResponse","error","HttpErrorResponse","status","open","name","throwError","KvmModule","param","HTTP_INTERCEPTORS","useClass","multi","HttpClientModule","BrowserModule","BrowserAnimationsModule","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["export const environment = {\r\n    production: false,\r\n    mpsServer: 'https://52.172.14.137/mps',\r\n    rpsServer: 'https://52.172.14.137/rps' \r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from '../environments/environment';\r\nimport { AmtFeaturesResponse, PowerState } from '../models/models';\r\n\r\n@Injectable({\r\n  providedIn: 'platform',\r\n})\r\nexport class KvmService {\r\n  connectKVMSocket: EventEmitter<boolean> = new EventEmitter<boolean>(false);\r\n  stopwebSocket: EventEmitter<boolean> = new EventEmitter<boolean>(false);\r\n\r\n  constructor(private readonly http: HttpClient) {}\r\n\r\n  setAmtFeatures(deviceId: string): Observable<AmtFeaturesResponse> {\r\n    const payload = {\r\n      userConsent: 'none',\r\n      enableKVM: true,\r\n      enableSOL: true,\r\n      enableIDER: true,\r\n    };\r\n    return this.http\r\n      .post<AmtFeaturesResponse>(\r\n        `${environment.mpsServer}/api/v1/amt/features/${deviceId}`,\r\n        payload\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n  getPowerState(deviceId: string): Observable<PowerState> {\r\n    return this.http\r\n      .get<PowerState>(\r\n        `${environment.mpsServer}/api/v1/amt/power/state/${deviceId}`\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n  sendPowerAction(\r\n    deviceId: string,\r\n    action: number,\r\n    useSOL: boolean = false\r\n  ): Observable<any> {\r\n    const payload = {\r\n      method: 'PowerAction',\r\n      action,\r\n      useSOL,\r\n    };\r\n    return this.http\r\n      .post<any>(\r\n        `${environment.mpsServer}/api/v1/amt/power/action/${deviceId}`,\r\n        payload\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  AMTDesktop,\r\n  AMTKvmDataRedirector,\r\n  ConsoleLogger,\r\n  DataProcessor,\r\n  IDataProcessor,\r\n  ILogger,\r\n  KeyBoardHelper,\r\n  MouseHelper,\r\n  Protocol,\r\n} from '@open-amt-cloud-toolkit/ui-toolkit/core';\r\nimport { environment } from '../environments/environment';\r\nimport { KvmService } from './kvm.service';\r\nimport { fromEvent, interval, of, Subscription, timer } from 'rxjs';\r\nimport { catchError, finalize, mergeMap, throttleTime } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { PowerUpAlertComponent } from './shared/power-up-alert/power-up-alert.component';\r\nimport SnackbarDefaults from './shared/config/snackBarDefault';\r\n\r\n@Component({\r\n  selector: 'amt-kvm',\r\n  templateUrl: './kvm.component.html',\r\n  styleUrls: ['./kvm.component.css'],\r\n})\r\nexport class KvmComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('canvas', { static: false }) canvas: ElementRef | undefined;\r\n  public context!: CanvasRenderingContext2D;\r\n\r\n  // //setting a width and height for the canvas\r\n\r\n  @Input() public width = 400;\r\n  @Input() public height = 400;\r\n  @Output() deviceState: number = 0;\r\n  @Output() deviceStatus: EventEmitter<number> = new EventEmitter<number>();\r\n  @Input() private deviceConnection: EventEmitter<boolean> =\r\n    new EventEmitter<boolean>();\r\n  stopSocketSubscription!: Subscription;\r\n  startSocketSubscription!: Subscription;\r\n  module: any;\r\n  redirector: any;\r\n  dataProcessor!: IDataProcessor | null;\r\n  mouseHelper!: MouseHelper;\r\n  keyboardHelper!: KeyBoardHelper;\r\n  logger!: ILogger;\r\n  powerState: any = 0;\r\n  btnText: string = 'Disconnect';\r\n  isPoweredOn: boolean = false;\r\n  isLoading: boolean = false;\r\n  deviceId: string = '';\r\n  selected: number = 1;\r\n  timeInterval!: any;\r\n  server: string = `${environment.mpsServer.replace('http', 'ws')}/relay`;\r\n  previousAction = 'kvm';\r\n  selectedAction = '';\r\n  mouseMove: any = null;\r\n\r\n  encodings = [\r\n    { value: 1, viewValue: 'RLE 8' },\r\n    { value: 2, viewValue: 'RLE 16' },\r\n  ];\r\n\r\n  constructor(\r\n    public snackBar: MatSnackBar,\r\n    public dialog: MatDialog,\r\n    private readonly devicesService: KvmService,\r\n    @Inject('userInput') public params\r\n  ) {\r\n    this.deviceId = this.params.deviceId;\r\n    if (environment.mpsServer.includes('/mps')) {\r\n      //handles kong route\r\n      this.server = `${environment.mpsServer.replace('http', 'ws')}/ws/relay`;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.logger = new ConsoleLogger(1);\r\n    this.deviceConnection.subscribe((data) => {\r\n      if (data === true) {\r\n        this.init();\r\n      } else {\r\n        this.stopKvm();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.init();\r\n  }\r\n\r\n  instantiate(): void {\r\n    this.context = this.canvas?.nativeElement.getContext('2d');\r\n    this.redirector = new AMTKvmDataRedirector(\r\n      this.logger,\r\n      Protocol.KVM,\r\n      new FileReader(),\r\n      this.deviceId,\r\n      16994,\r\n      '',\r\n      '',\r\n      0,\r\n      0,\r\n      this.params.authToken,\r\n      this.server\r\n    );\r\n    this.module = new AMTDesktop(this.logger as any, this.context);\r\n    this.dataProcessor = new DataProcessor(\r\n      this.logger,\r\n      this.redirector,\r\n      this.module\r\n    );\r\n    this.mouseHelper = new MouseHelper(this.module, this.redirector, 200);\r\n    this.keyboardHelper = new KeyBoardHelper(this.module, this.redirector);\r\n\r\n    this.redirector.onProcessData = this.module.processData.bind(this.module);\r\n    this.redirector.onStart = this.module.start.bind(this.module);\r\n    this.redirector.onNewState = this.module.onStateChange.bind(this.module);\r\n    this.redirector.onSendKvmData = this.module.onSendKvmData.bind(this.module);\r\n    this.redirector.onStateChanged = this.onConnectionStateChange.bind(this);\r\n    this.redirector.onError = this.onRedirectorError.bind(this);\r\n    this.module.onSend = this.redirector.send.bind(this.redirector);\r\n    this.module.onProcessData = this.dataProcessor.processData.bind(\r\n      this.dataProcessor\r\n    );\r\n    this.module.bpp = this.selected;\r\n    this.mouseMove = fromEvent(this.canvas?.nativeElement, 'mousemove');\r\n    this.mouseMove.pipe(throttleTime(200)).subscribe((event: any) => {\r\n      if (this.mouseHelper != null) {\r\n        this.mouseHelper.mousemove(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  onConnectionStateChange = (redirector: any, state: number): any => {\r\n    this.deviceState = state;\r\n    this.deviceStatus.emit(state);\r\n  };\r\n\r\n  onRedirectorError(): void {\r\n    this.reset();\r\n  }\r\n\r\n  init(): void {\r\n    this.instantiate();\r\n    setTimeout(() => {\r\n      this.isLoading = false;\r\n      this.autoConnect();\r\n    }, 4000);\r\n  }\r\n\r\n  autoConnect(): void {\r\n    if (this.redirector != null) {\r\n      this.redirector.start(WebSocket);\r\n      this.keyboardHelper.GrabKeyInput();\r\n    }\r\n  }\r\n\r\n  onEncodingChange(): void {\r\n    this.stopKvm();\r\n    timer(1000).subscribe(() => {\r\n      this.autoConnect();\r\n    });\r\n  }\r\n\r\n  checkPowerStatus(): boolean {\r\n    return this.powerState.powerstate === 2;\r\n  }\r\n\r\n  reset = (): void => {\r\n    this.redirector = null;\r\n    this.module = null;\r\n    this.dataProcessor = null;\r\n    this.height = 400;\r\n    this.width = 400;\r\n    this.instantiate();\r\n  };\r\n\r\n  stopKvm = (): void => {\r\n    this.redirector.stop();\r\n    this.keyboardHelper.UnGrabKeyInput();\r\n    this.reset();\r\n  };\r\n\r\n  ngDoCheck(): void {\r\n    if (this.selectedAction !== this.previousAction) {\r\n      this.previousAction = this.selectedAction;\r\n    }\r\n  }\r\n\r\n  onMouseup(event: MouseEvent): void {\r\n    if (this.mouseHelper != null) {\r\n      this.mouseHelper.mouseup(event);\r\n    }\r\n  }\r\n\r\n  onMousedown(event: MouseEvent): void {\r\n    if (this.mouseHelper != null) {\r\n      this.mouseHelper.mousedown(event);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.stopKvm();\r\n  }\r\n}\r\n","<div>\r\n  <canvas\r\n    class=\"canvas\"\r\n    #canvas\r\n    [width]=\"width\"\r\n    [height]=\"height\"\r\n    oncontextmenu=\"return false\"\r\n    (mouseup)=\"onMouseup($event)\"\r\n    (mousedown)=\"onMousedown($event)\"\r\n  ></canvas>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amt-device-toolbar',\r\n  templateUrl: './device-toolbar.component.html',\r\n  styleUrls: ['./device-toolbar.component.css']\r\n})\r\nexport class DeviceToolbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>Device Control</div>\r\n<div>List</div>\r\n<button>tv</button>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amt-are-you-sure',\r\n  templateUrl: './are-you-sure.component.html',\r\n  styleUrls: ['./are-you-sure.component.scss']\r\n})\r\nexport class AreYouSureDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amt-power-up-alert',\r\n  templateUrl: './power-up-alert.component.html',\r\n  styleUrls: ['./power-up-alert.component.scss']\r\n})\r\nexport class PowerUpAlertComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Your device is not powered on</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  Do you want to send a power up command to the device?\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>No</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Yes</button>\r\n</mat-dialog-actions>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'amt-dialog-content',\r\n  templateUrl: './dialog-content.component.html',\r\n  styleUrls: ['./dialog-content.component.scss'],\r\n})\r\nexport class DialogContentComponent implements OnInit {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { name: string }) {}\r\n  ngOnInit(): void {}\r\n}\r\n","/*********************************************************************\r\n* Copyright (c) Intel Corporation 2021\r\n* SPDX-License-Identifier: Apache-2.0\r\n**********************************************************************/\r\n/* eslint-disable @typescript-eslint/no-extraneous-class */\r\nimport { NgModule, ModuleWithProviders } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\r\nimport { MatGridListModule } from '@angular/material/grid-list'\r\nimport { MatExpansionModule } from '@angular/material/expansion'\r\nimport { MatStepperModule } from '@angular/material/stepper'\r\nimport { MatChipsModule } from '@angular/material/chips'\r\nimport { MatNativeDateModule } from '@angular/material/core'\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { MatCardModule } from '@angular/material/card'\r\nimport { MatDialogModule } from '@angular/material/dialog'\r\nimport { MatListModule } from '@angular/material/list'\r\nimport { MatPaginatorModule } from '@angular/material/paginator'\r\nimport { MatSortModule } from '@angular/material/sort'\r\nimport { MatCheckboxModule } from '@angular/material/checkbox'\r\nimport { MatTooltipModule } from '@angular/material/tooltip'\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete'\r\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar'\r\nimport { MatInputModule } from '@angular/material/input'\r\nimport { MatFormFieldModule } from '@angular/material/form-field'\r\nimport { MatRadioModule } from '@angular/material/radio'\r\nimport { MatSelectModule } from '@angular/material/select'\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar'\r\nimport { MatDatepickerModule } from '@angular/material/datepicker'\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatSidenavModule } from '@angular/material/sidenav'\r\nimport { MatMenuModule } from '@angular/material/menu'\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatTabsModule } from '@angular/material/tabs'\r\nimport { MatTreeModule } from '@angular/material/tree'\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle'\r\n\r\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { FlexLayoutModule } from '@angular/flex-layout'\r\nimport { CdkTableModule } from '@angular/cdk/table'\r\nimport { AreYouSureDialogComponent } from './are-you-sure/are-you-sure.component'\r\nimport { PowerUpAlertComponent } from './power-up-alert/power-up-alert.component'\r\nimport { DialogContentComponent } from './dialog-content/dialog-content.component'\r\n// import { HttpClientModule } from '@angular/common/http'\r\n\r\n@NgModule({\r\n  imports: [\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatTreeModule,\r\n    MatMenuModule,\r\n    CdkTableModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatChipsModule,\r\n    MatSelectModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatAutocompleteModule,\r\n    MatStepperModule,\r\n    MatDialogModule,\r\n    MatSidenavModule,\r\n    MatInputModule,\r\n    MatSlideToggleModule,\r\n    MatDatepickerModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatPaginatorModule\r\n  ],\r\n  exports: [\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatTableModule,\r\n    MatTreeModule,\r\n    MatIconModule,\r\n    MatSortModule,\r\n    MatButtonToggleModule,\r\n    MatTooltipModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    MatMenuModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatProgressBarModule, MatProgressSpinnerModule,\r\n    MatSlideToggleModule,\r\n    MatSidenavModule,\r\n    MatPaginatorModule,\r\n    CdkTableModule,\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: { duration: 30000, panelClass: ['success', 'mat-elevation-z12'] } }\r\n  ],\r\n  declarations: [AreYouSureDialogComponent, PowerUpAlertComponent, DialogContentComponent]\r\n})\r\nexport class OpenAMTMaterialModule {\r\n\r\n}\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [OpenAMTMaterialModule],\r\n  imports: [\r\n    CommonModule,\r\n    OpenAMTMaterialModule\r\n  ]\r\n})\r\nexport class SharedModule {\r\n  static forRoot (): ModuleWithProviders<SharedModule> {\r\n    return {\r\n      ngModule: SharedModule,\r\n      providers: []\r\n    }\r\n  }\r\n}\r\n","import {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { DialogContentComponent } from './shared/dialog-content/dialog-content.component';\r\n\r\n@Injectable()\r\nexport class AuthorizeInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    @Inject('userInput') public params,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.params.authToken}`,\r\n      },\r\n    });\r\n    return next.handle(request).pipe(\r\n      tap(\r\n        (data: any) => {\r\n          if (data instanceof HttpResponse) {\r\n            return data;\r\n          }\r\n          return null;\r\n        },\r\n        (error: any) => {\r\n          if (error instanceof HttpErrorResponse) {\r\n            if (error.status === 401) {\r\n              this.dialog.open(DialogContentComponent, {\r\n                data: { name: 'session time out. Please login again' },\r\n              });\r\n            }\r\n          }\r\n          return throwError(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import {\r\n  NgModule,\r\n  CUSTOM_ELEMENTS_SCHEMA,\r\n  ModuleWithProviders,\r\n} from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { KvmComponent } from './kvm.component';\r\nimport { DeviceToolbarComponent } from './app/device-toolbar/device-toolbar.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { KvmService } from './kvm.service';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AuthorizeInterceptor } from './authorize.interceptor';\r\n@NgModule({\r\n  declarations: [KvmComponent, DeviceToolbarComponent],\r\n  imports: [\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n    BrowserModule,\r\n    SharedModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n  ],\r\n  exports: [KvmComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthorizeInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class KvmModule {\r\n  public static forRoot(param: any): ModuleWithProviders<KvmModule> {\r\n    return {\r\n      ngModule: KvmModule,\r\n      providers: [\r\n        KvmService,\r\n        {\r\n          provide: 'userInput',\r\n          useValue: param,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n"]}