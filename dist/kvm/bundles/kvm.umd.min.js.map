{"version":3,"sources":["../../../projects/kvm/src/environments/environment.ts","../../../projects/kvm/src/lib/kvm.service.ts","../../../projects/kvm/src/lib/shared/power-up-alert/power-up-alert.component.ts","../../../projects/kvm/src/lib/auth.service.ts","../../../projects/kvm/src/lib/kvm.component.ts","../../../projects/kvm/src/lib/kvm.component.html","../../../projects/kvm/src/lib/app/device-toolbar/device-toolbar.component.ts","../../../projects/kvm/src/lib/app/device-toolbar/device-toolbar.component.html","../../../projects/kvm/src/lib/shared/are-you-sure/are-you-sure.component.ts","../../../projects/kvm/src/lib/shared/dialog-content/dialog-content.component.ts","../../../projects/kvm/src/lib/shared/shared.module.ts","../../../projects/kvm/src/lib/kvm.module.ts"],"names":["environment","production","mpsServer","rpsServer","KvmService","http","this","connectKVMSocket","EventEmitter","stopwebSocket","prototype","setAmtFeatures","deviceId","post","userConsent","enableKVM","enableSOL","enableIDER","pipe","catchError","err","getPowerState","get","sendPowerAction","action","useSOL","payload","method","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","Injectable","PowerUpAlertComponent","ngOnInit","selectors","decls","vars","template","rf","ctx","styles","Component","selector","templateUrl","styleUrls","AuthService","loggedInSubject","isLoggedIn","url","localStorage","loggedInUser","next","includes","getLoggedUserToken","loggedUser","getItem","JSON","parse","token","KvmComponent","dialog","authService","devicesService","_this","width","height","deviceState","deviceStatus","powerState","btnText","isPoweredOn","isLoading","selected","server","replace","previousAction","selectedAction","mouseMove","encodings","value","viewValue","onConnectionStateChange","redirector","state","emit","reset","module","dataProcessor","instantiate","stopKvm","stop","keyboardHelper","UnGrabKeyInput","logger","ConsoleLogger","stopSocketSubscription","subscribe","startSocketSubscription","timeInterval","interval","mergeMap","ngAfterViewInit","context","_a","canvas","nativeElement","getContext","AMTKvmDataRedirector","Protocol","KVM","FileReader","AMTDesktop","DataProcessor","mouseHelper","MouseHelper","KeyBoardHelper","onProcessData","processData","bind","onStart","start","onNewState","onStateChange","onSendKvmData","onStateChanged","onError","onRedirectorError","onSend","send","bpp","fromEvent","_b","throttleTime","event","mousemove","init","of","finalize","data","checkPowerStatus","setTimeout","autoConnect","open","afterClosed","result","console","log","WebSocket","GrabKeyInput","onEncodingChange","timer","powerstate","ngDoCheck","onMouseup","mouseup","onMousedown","mousedown","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i1$1","MatDialog","viewQuery","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵlistener","$event","i0.ɵɵadvance","i0.ɵɵproperty","ViewChild","static","Input","Output","DeviceToolbarComponent","AreYouSureDialogComponent","DialogContentComponent","MAT_DIALOG_DATA","Inject","OpenAMTMaterialModule","provide","MAT_SNACK_BAR_DEFAULT_OPTIONS","useValue","duration","panelClass","imports","FlexLayoutModule","ReactiveFormsModule","FormsModule","MatNativeDateModule","MatTableModule","MatTreeModule","MatMenuModule","CdkTableModule","MatButtonToggleModule","MatRadioModule","MatSortModule","MatCheckboxModule","MatTooltipModule","MatSnackBarModule","MatExpansionModule","MatGridListModule","MatChipsModule","MatSelectModule","MatListModule","MatCardModule","MatAutocompleteModule","MatStepperModule","MatDialogModule","MatSidenavModule","MatInputModule","MatSlideToggleModule","MatDatepickerModule","MatProgressBarModule","MatProgressSpinnerModule","MatToolbarModule","MatIconModule","MatTabsModule","MatFormFieldModule","MatButtonModule","MatPaginatorModule","declarations","exports","NgModule","providers","SharedModule","forRoot","ngModule","CommonModule","KvmModule","HttpClientModule","BrowserModule","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["export const environment = {\r\n    production: false,\r\n    mpsServer: 'https://localhost/mps',\r\n    rpsServer: 'https://localhost/rps' \r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from '../environments/environment';\r\nimport { AmtFeaturesResponse, PowerState } from '../models/models';\r\n\r\n@Injectable({\r\n  providedIn: 'platform',\r\n})\r\nexport class KvmService {\r\n  connectKVMSocket: EventEmitter<boolean> = new EventEmitter<boolean>(false);\r\n  stopwebSocket: EventEmitter<boolean> = new EventEmitter<boolean>(false);\r\n\r\n  constructor(private readonly http: HttpClient) {}\r\n\r\n  setAmtFeatures(deviceId: string): Observable<AmtFeaturesResponse> {\r\n    const payload = {\r\n      userConsent: 'none',\r\n      enableKVM: true,\r\n      enableSOL: true,\r\n      enableIDER: true,\r\n    };\r\n    return this.http\r\n      .post<AmtFeaturesResponse>(\r\n        `${environment.mpsServer}/api/v1/amt/features/${deviceId}`,\r\n        payload\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n  getPowerState(deviceId: string): Observable<PowerState> {\r\n    return this.http\r\n      .get<PowerState>(\r\n        `${environment.mpsServer}/api/v1/amt/power/state/${deviceId}`\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n  sendPowerAction(\r\n    deviceId: string,\r\n    action: number,\r\n    useSOL: boolean = false\r\n  ): Observable<any> {\r\n    const payload = {\r\n      method: 'PowerAction',\r\n      action,\r\n      useSOL,\r\n    };\r\n    return this.http\r\n      .post<any>(\r\n        `${environment.mpsServer}/api/v1/amt/power/action/${deviceId}`,\r\n        payload\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amt-power-up-alert',\r\n  templateUrl: './power-up-alert.component.html',\r\n  styleUrls: ['./power-up-alert.component.scss']\r\n})\r\nexport class PowerUpAlertComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'platform',\r\n})\r\nexport class AuthService {\r\n  loggedInSubject: EventEmitter<boolean> = new EventEmitter<boolean>(false);\r\n  isLoggedIn = false;\r\n  url: string = `${environment.mpsServer}/api/v1/authorize`;\r\n\r\n  constructor(private readonly http: HttpClient) {\r\n    if (localStorage.loggedInUser != null) {\r\n      this.isLoggedIn = true;\r\n      this.loggedInSubject.next(this.isLoggedIn);\r\n    }\r\n    if (environment.mpsServer.includes('/mps')) {\r\n      // handles kong route\r\n      this.url = `${environment.mpsServer}/login/api/v1/authorize`;\r\n    }\r\n  }\r\n\r\n  getLoggedUserToken(): string {\r\n    const loggedUser: any = localStorage.getItem('loggedInUser');\r\n    const token: string = JSON.parse(loggedUser).token;\r\n    return token;\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  AMTDesktop,\r\n  AMTKvmDataRedirector,\r\n  ConsoleLogger,\r\n  DataProcessor,\r\n  IDataProcessor,\r\n  ILogger,\r\n  KeyBoardHelper,\r\n  MouseHelper,\r\n  Protocol,\r\n} from '@open-amt-cloud-toolkit/ui-toolkit/core';\r\nimport { environment } from '../environments/environment';\r\n// import { ActivatedRoute } from '@angular/router';\r\nimport { KvmService } from './kvm.service';\r\nimport { fromEvent, interval, of, Subscription, timer } from 'rxjs';\r\nimport { catchError, finalize, mergeMap, throttleTime } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n// import { MatSnackBar } from '@angular/material/snack-bar';\r\n// import { PowerUpAlertComponent } from './shared/power-up-alert/power-up-alert.component';\r\n// import SnackbarDefaults from './shared/config/snackBarDefault';\r\nimport { AuthService } from './auth.service'\r\nimport { PowerUpAlertComponent } from './shared/power-up-alert/power-up-alert.component';\r\n// import { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'amt-kvm',\r\n  templateUrl: './kvm.component.html',\r\n  styles: [],\r\n})\r\nexport class KvmComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('canvas', { static: false }) canvas: ElementRef | undefined;\r\n  public context!: CanvasRenderingContext2D;\r\n\r\n  // //setting a width and height for the canvas\r\n\r\n  @Input() public width = 400;\r\n  @Input() public height = 400;\r\n  @Output() deviceState: number = 0;\r\n  @Output() deviceStatus: EventEmitter<number> = new EventEmitter<number>();\r\n  stopSocketSubscription!: Subscription;\r\n  startSocketSubscription!: Subscription;\r\n  module: any;\r\n  redirector: any;\r\n  dataProcessor!: IDataProcessor | null;\r\n  mouseHelper!: MouseHelper;\r\n  keyboardHelper!: KeyBoardHelper;\r\n  logger!: ILogger;\r\n  powerState: any = 0;\r\n  btnText: string = 'Disconnect';\r\n  isPoweredOn: boolean = false;\r\n  isLoading: boolean = false;\r\n  deviceId: string = '';\r\n  selected: number = 1;\r\n  timeInterval!: any;\r\n  server: string = `${environment.mpsServer.replace('http', 'ws')}/relay`;\r\n  previousAction = 'kvm';\r\n  selectedAction = '';\r\n  mouseMove: any = null;\r\n\r\n  encodings = [\r\n    { value: 1, viewValue: 'RLE 8' },\r\n    { value: 2, viewValue: 'RLE 16' },\r\n  ];\r\n\r\n  constructor(\r\n    // public snackBar: MatSnackBar,\r\n    public dialog: MatDialog,\r\n    private readonly authService: AuthService,\r\n    private readonly devicesService: KvmService,\r\n    // public readonly activatedRoute: ActivatedRoute\r\n  ) {\r\n    if (environment.mpsServer.includes('/mps')) {\r\n      //handles kong route\r\n      this.server = `${environment.mpsServer.replace('http', 'ws')}/ws/relay`;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.logger = new ConsoleLogger(1);\r\n    // this.activatedRoute.params.subscribe((params) => {\r\n    //   this.isLoading = true;\r\n    //   this.deviceId = params.id;\r\n    // });\r\n    this.stopSocketSubscription = this.devicesService.stopwebSocket.subscribe(\r\n      () => {\r\n        this.stopKvm();\r\n      }\r\n    );\r\n    this.startSocketSubscription =\r\n      this.devicesService.connectKVMSocket.subscribe(() => {\r\n        this.setAmtFeatures();\r\n      });\r\n    this.timeInterval = interval(15000)\r\n      .pipe(mergeMap(() => this.devicesService.getPowerState(this.deviceId)))\r\n      .subscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setAmtFeatures();\r\n  }\r\n\r\n  instantiate(): void {\r\n    this.context = this.canvas?.nativeElement.getContext('2d');\r\n    this.redirector = new AMTKvmDataRedirector(\r\n      this.logger,\r\n      Protocol.KVM,\r\n      new FileReader(),\r\n      this.deviceId,\r\n      16994,\r\n      '',\r\n      '',\r\n      0,\r\n      0,\r\n      this.authService.getLoggedUserToken(),\r\n      this.server\r\n    );\r\n    this.module = new AMTDesktop(this.logger as any, this.context);\r\n    this.dataProcessor = new DataProcessor(\r\n      this.logger,\r\n      this.redirector,\r\n      this.module\r\n    );\r\n    this.mouseHelper = new MouseHelper(this.module, this.redirector, 200);\r\n    this.keyboardHelper = new KeyBoardHelper(this.module, this.redirector);\r\n\r\n    this.redirector.onProcessData = this.module.processData.bind(this.module);\r\n    this.redirector.onStart = this.module.start.bind(this.module);\r\n    this.redirector.onNewState = this.module.onStateChange.bind(this.module);\r\n    this.redirector.onSendKvmData = this.module.onSendKvmData.bind(this.module);\r\n    this.redirector.onStateChanged = this.onConnectionStateChange.bind(this);\r\n    this.redirector.onError = this.onRedirectorError.bind(this);\r\n    this.module.onSend = this.redirector.send.bind(this.redirector);\r\n    this.module.onProcessData = this.dataProcessor.processData.bind(\r\n      this.dataProcessor\r\n    );\r\n    this.module.bpp = this.selected;\r\n    this.mouseMove = fromEvent(this.canvas?.nativeElement, 'mousemove');\r\n    this.mouseMove.pipe(throttleTime(200)).subscribe((event: any) => {\r\n      if (this.mouseHelper != null) {\r\n        this.mouseHelper.mousemove(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  onConnectionStateChange = (redirector: any, state: number): any => {\r\n    this.deviceState = state;\r\n    this.deviceStatus.emit(state);\r\n  };\r\n\r\n  onRedirectorError(): void {\r\n    this.reset();\r\n  }\r\n\r\n  init(): void {\r\n    this.devicesService\r\n      .getPowerState(this.deviceId)\r\n      .pipe(\r\n        catchError(() => {\r\n          // this.snackBar.open(`Error retrieving power status`, undefined, SnackbarDefaults.defaultError)\r\n          return of();\r\n        }),\r\n        finalize(() => {})\r\n      )\r\n      .subscribe((data) => {\r\n        this.powerState = data;\r\n        this.isPoweredOn = this.checkPowerStatus();\r\n        if (!this.isPoweredOn) {\r\n          this.isLoading = false;\r\n          const dialog = this.dialog.open(PowerUpAlertComponent);\r\n          dialog.afterClosed().subscribe((result) => {\r\n            if (result) {\r\n              this.isLoading = true;\r\n              this.devicesService\r\n                .sendPowerAction(this.deviceId, 2)\r\n                .pipe()\r\n                .subscribe((data) => {\r\n                  this.instantiate();\r\n                  setTimeout(() => {\r\n                    this.isLoading = false;\r\n                    this.autoConnect();\r\n                  }, 4000);\r\n                });\r\n            }\r\n          });\r\n        } else {\r\n          this.instantiate();\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n            this.autoConnect();\r\n          }, 0);\r\n        }\r\n      });\r\n  }\r\n\r\n  setAmtFeatures(): void {\r\n    this.isLoading = true;\r\n    console.log('coming inside in setAmtfeatures');\r\n    this.devicesService\r\n      .setAmtFeatures(this.deviceId)\r\n      .pipe(\r\n        catchError(() => {\r\n          // this.snackBar.open(`Error enabling kvm`, undefined, SnackbarDefaults.defaultError)\r\n          this.init();\r\n          return of();\r\n        }),\r\n        finalize(() => {})\r\n      )\r\n      .subscribe(() => this.init());\r\n  }\r\n\r\n  autoConnect(): void {\r\n    if (this.redirector != null) {\r\n      this.redirector.start(WebSocket);\r\n      this.keyboardHelper.GrabKeyInput();\r\n    }\r\n  }\r\n\r\n  \r\n  onEncodingChange (): void {\r\n    this.stopKvm()\r\n    timer(1000).subscribe(() => {\r\n      this.autoConnect()\r\n    })\r\n  }\r\n\r\n  checkPowerStatus(): boolean {\r\n    return this.powerState.powerstate === 2;\r\n  }\r\n\r\n  reset = (): void => {\r\n    this.redirector = null;\r\n    this.module = null;\r\n    this.dataProcessor = null;\r\n    this.height = 400;\r\n    this.width = 400;\r\n    this.instantiate();\r\n  };\r\n\r\n  stopKvm = (): void => {\r\n    this.redirector.stop();\r\n    this.keyboardHelper.UnGrabKeyInput();\r\n    this.reset();\r\n  };\r\n\r\n  ngDoCheck(): void {\r\n    if (this.selectedAction !== this.previousAction) {\r\n      this.previousAction = this.selectedAction;\r\n    }\r\n  }\r\n\r\n  onMouseup(event: MouseEvent): void {\r\n    if (this.mouseHelper != null) {\r\n      this.mouseHelper.mouseup(event);\r\n    }\r\n  }\r\n\r\n  onMousedown(event: MouseEvent): void {\r\n    if (this.mouseHelper != null) {\r\n      this.mouseHelper.mousedown(event);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy (): void {\r\n    if (this.timeInterval) {\r\n      this.timeInterval.unsubscribe()\r\n    }\r\n    this.stopKvm()\r\n    if (this.startSocketSubscription) {\r\n      this.startSocketSubscription.unsubscribe()\r\n    }\r\n    if (this.stopSocketSubscription) {\r\n      this.stopSocketSubscription.unsubscribe()\r\n    }\r\n  }\r\n}\r\n","<!-- <amt-device-toolbar></amt-device-toolbar> -->\r\n<div>\r\n    <button style=\"display: block;\"> connect </button>\r\n    <canvas class=\"canvas\" #canvas [width]=\"width\" [height]=\"height\" oncontextmenu=\"return false\" (mouseup)=\"onMouseup($event)\" (mousedown)=\"onMousedown($event)\"></canvas>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amt-device-toolbar',\r\n  templateUrl: './device-toolbar.component.html',\r\n  styleUrls: ['./device-toolbar.component.css']\r\n})\r\nexport class DeviceToolbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>Device Control</div>\r\n<div>List</div>\r\n<button>tv</button>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amt-are-you-sure',\r\n  templateUrl: './are-you-sure.component.html',\r\n  styleUrls: ['./are-you-sure.component.scss']\r\n})\r\nexport class AreYouSureDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'amt-dialog-content',\r\n  templateUrl: './dialog-content.component.html',\r\n  styleUrls: ['./dialog-content.component.scss'],\r\n})\r\nexport class DialogContentComponent implements OnInit {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { name: string }) {}\r\n  ngOnInit(): void {}\r\n}\r\n","/*********************************************************************\r\n* Copyright (c) Intel Corporation 2021\r\n* SPDX-License-Identifier: Apache-2.0\r\n**********************************************************************/\r\n/* eslint-disable @typescript-eslint/no-extraneous-class */\r\nimport { NgModule, ModuleWithProviders } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\r\nimport { MatGridListModule } from '@angular/material/grid-list'\r\nimport { MatExpansionModule } from '@angular/material/expansion'\r\nimport { MatStepperModule } from '@angular/material/stepper'\r\nimport { MatChipsModule } from '@angular/material/chips'\r\nimport { MatNativeDateModule } from '@angular/material/core'\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { MatCardModule } from '@angular/material/card'\r\nimport { MatDialogModule } from '@angular/material/dialog'\r\nimport { MatListModule } from '@angular/material/list'\r\nimport { MatPaginatorModule } from '@angular/material/paginator'\r\nimport { MatSortModule } from '@angular/material/sort'\r\nimport { MatCheckboxModule } from '@angular/material/checkbox'\r\nimport { MatTooltipModule } from '@angular/material/tooltip'\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete'\r\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar'\r\nimport { MatInputModule } from '@angular/material/input'\r\nimport { MatFormFieldModule } from '@angular/material/form-field'\r\nimport { MatRadioModule } from '@angular/material/radio'\r\nimport { MatSelectModule } from '@angular/material/select'\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar'\r\nimport { MatDatepickerModule } from '@angular/material/datepicker'\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatSidenavModule } from '@angular/material/sidenav'\r\nimport { MatMenuModule } from '@angular/material/menu'\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatTabsModule } from '@angular/material/tabs'\r\nimport { MatTreeModule } from '@angular/material/tree'\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle'\r\n\r\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { FlexLayoutModule } from '@angular/flex-layout'\r\nimport { CdkTableModule } from '@angular/cdk/table'\r\nimport { AreYouSureDialogComponent } from './are-you-sure/are-you-sure.component'\r\nimport { PowerUpAlertComponent } from './power-up-alert/power-up-alert.component'\r\nimport { DialogContentComponent } from './dialog-content/dialog-content.component'\r\n// import { HttpClientModule } from '@angular/common/http'\r\n\r\n@NgModule({\r\n  imports: [\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatTreeModule,\r\n    MatMenuModule,\r\n    CdkTableModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatChipsModule,\r\n    MatSelectModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatAutocompleteModule,\r\n    MatStepperModule,\r\n    MatDialogModule,\r\n    MatSidenavModule,\r\n    MatInputModule,\r\n    MatSlideToggleModule,\r\n    MatDatepickerModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatPaginatorModule\r\n  ],\r\n  exports: [\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatTableModule,\r\n    MatTreeModule,\r\n    MatIconModule,\r\n    MatSortModule,\r\n    MatButtonToggleModule,\r\n    MatTooltipModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    MatMenuModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatProgressBarModule, MatProgressSpinnerModule,\r\n    MatSlideToggleModule,\r\n    MatSidenavModule,\r\n    MatPaginatorModule,\r\n    CdkTableModule,\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: { duration: 30000, panelClass: ['success', 'mat-elevation-z12'] } }\r\n  ],\r\n  declarations: [AreYouSureDialogComponent, PowerUpAlertComponent, DialogContentComponent]\r\n})\r\nexport class OpenAMTMaterialModule {\r\n\r\n}\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [OpenAMTMaterialModule],\r\n  imports: [\r\n    CommonModule,\r\n    OpenAMTMaterialModule\r\n  ]\r\n})\r\nexport class SharedModule {\r\n  static forRoot (): ModuleWithProviders<SharedModule> {\r\n    return {\r\n      ngModule: SharedModule,\r\n      providers: []\r\n    }\r\n  }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { KvmComponent } from './kvm.component';\r\nimport { DeviceToolbarComponent } from './app/device-toolbar/device-toolbar.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { KvmService } from './kvm.service';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [KvmComponent, DeviceToolbarComponent],\r\n  imports: [HttpClientModule, BrowserModule,SharedModule.forRoot()],\r\n  exports: [KvmComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [AuthService, KvmService],\r\n})\r\nexport class KvmModule {}\r\n"]}