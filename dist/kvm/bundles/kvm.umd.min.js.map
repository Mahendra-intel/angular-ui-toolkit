{"version":3,"sources":["../../../projects/kvm/src/environments/environment.ts","../../../projects/kvm/src/lib/kvm.service.ts","../../../projects/kvm/src/lib/shared/power-up-alert/power-up-alert.component.ts","../../../projects/kvm/src/lib/shared/power-up-alert/power-up-alert.component.html","../../../projects/kvm/src/lib/shared/config/snackBarDefault.ts","../../../projects/kvm/src/lib/auth.service.ts","../../../projects/kvm/src/lib/kvm.component.html","../../../projects/kvm/src/lib/kvm.component.ts","../../../projects/kvm/src/lib/app/device-toolbar/device-toolbar.component.ts","../../../projects/kvm/src/lib/app/device-toolbar/device-toolbar.component.html","../../../projects/kvm/src/lib/shared/are-you-sure/are-you-sure.component.ts","../../../projects/kvm/src/lib/shared/dialog-content/dialog-content.component.ts","../../../projects/kvm/src/lib/shared/shared.module.ts","../../../projects/kvm/src/lib/authorize.interceptor.ts","../../../projects/kvm/src/lib/kvm.module.ts"],"names":["environment","production","mpsServer","rpsServer","KvmService","http","this","connectKVMSocket","EventEmitter","stopwebSocket","prototype","setAmtFeatures","deviceId","post","userConsent","enableKVM","enableSOL","enableIDER","pipe","catchError","err","getPowerState","get","sendPowerAction","action","useSOL","payload","method","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","Injectable","PowerUpAlertComponent","ngOnInit","selectors","decls","vars","consts","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵproperty","Component","selector","templateUrl","styleUrls","SnackbarDefaults","duration","panelClass","AuthService","loggedInSubject","isLoggedIn","url","localStorage","loggedInUser","next","includes","getLoggedUserToken","loggedUser","getItem","JSON","parse","token","i0.ɵɵtextInterpolate1","KvmComponent","snackBar","dialog","authService","devicesService","params","_this","width","height","deviceState","deviceStatus","powerState","btnText","isPoweredOn","isLoading","selected","server","replace","previousAction","selectedAction","mouseMove","encodings","value","viewValue","onConnectionStateChange","redirector","state","emit","reset","module","dataProcessor","instantiate","stopKvm","stop","keyboardHelper","UnGrabKeyInput","logger","ConsoleLogger","stopSocketSubscription","subscribe","startSocketSubscription","timeInterval","interval","mergeMap","ngAfterViewInit","context","_a","canvas","nativeElement","getContext","AMTKvmDataRedirector","Protocol","KVM","FileReader","AMTDesktop","DataProcessor","mouseHelper","MouseHelper","KeyBoardHelper","onProcessData","processData","bind","onStart","start","onNewState","onStateChange","onSendKvmData","onStateChanged","onError","onRedirectorError","onSend","send","bpp","fromEvent","_b","throttleTime","event","mousemove","init","open","undefined","of","finalize","data","checkPowerStatus","setTimeout","autoConnect","afterClosed","result","WebSocket","GrabKeyInput","onEncodingChange","timer","powerstate","ngDoCheck","onMouseup","mouseup","onMousedown","mousedown","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i1$2","MatSnackBar","i1$1","MatDialog","viewQuery","i0.ɵɵlistener","i0.ɵɵtemplate","$event","styles","Inject","ViewChild","static","Input","Output","DeviceToolbarComponent","AreYouSureDialogComponent","DialogContentComponent","MAT_DIALOG_DATA","OpenAMTMaterialModule","provide","MAT_SNACK_BAR_DEFAULT_OPTIONS","useValue","imports","FlexLayoutModule","ReactiveFormsModule","FormsModule","MatNativeDateModule","MatTableModule","MatTreeModule","MatMenuModule","CdkTableModule","MatButtonToggleModule","MatRadioModule","MatSortModule","MatCheckboxModule","MatTooltipModule","MatSnackBarModule","MatExpansionModule","MatGridListModule","MatChipsModule","MatSelectModule","MatListModule","MatCardModule","MatAutocompleteModule","MatStepperModule","MatDialogModule","MatSidenavModule","MatInputModule","MatSlideToggleModule","MatDatepickerModule","MatProgressBarModule","MatProgressSpinnerModule","MatToolbarModule","MatIconModule","MatTabsModule","MatFormFieldModule","MatButtonModule","MatPaginatorModule","declarations","exports","NgModule","providers","SharedModule","forRoot","ngModule","CommonModule","AuthorizeInterceptor","intercept","request","clone","setHeaders","Authorization","authToken","handle","tap","HttpResponse","error","HttpErrorResponse","status","name","throwError","KvmModule","param","HTTP_INTERCEPTORS","useClass","multi","HttpClientModule","BrowserModule","BrowserAnimationsModule","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"4wHAAO,IAAMA,EAAc,CACvBC,YAAY,EACZC,UAAW,4BACXC,UAAW,0CCWb,SAAAC,EAA6BC,GAAAC,KAAAD,KAAAA,EAH7BC,KAAAC,iBAA0C,IAAIC,EAAAA,cAAsB,GACpEF,KAAAG,cAAuC,IAAID,EAAAA,cAAsB,UAIjEJ,EAAAM,UAAAC,eAAA,SAAeC,GAOb,OAAON,KAAKD,KACTQ,KACIb,EAAYE,UAAS,wBAAwBU,EARpC,CACdE,YAAa,OACbC,WAAW,EACXC,WAAW,EACXC,YAAY,IAOXC,KACCC,EAAAA,YAAW,SAACC,GACV,MAAMA,OAIdhB,EAAAM,UAAAW,cAAA,SAAcT,GACZ,OAAON,KAAKD,KACTiB,IACItB,EAAYE,UAAS,2BAA2BU,GAEpDM,KACCC,EAAAA,YAAW,SAACC,GACV,MAAMA,OAIdhB,EAAAM,UAAAa,gBAAA,SACEX,EACAY,EACAC,QAAA,IAAAA,IAAAA,GAAA,GAEA,IAAMC,EAAU,CACdC,OAAQ,cACRH,OAAMA,EACNC,OAAMA,GAER,OAAOnB,KAAKD,KACTQ,KACIb,EAAYE,UAAS,4BAA4BU,EACpDc,GAEDR,KACCC,EAAAA,YAAW,SAACC,GACV,MAAMA,6CApDHhB,GAAUwB,EAAAC,SAAAC,EAAAC,kDAAV3B,EAAU4B,QAAV5B,EAAU6B,KAAAC,WAFT,6EAED9B,EAAU,CAAA,MAHtB+B,EAAAA,iBAAW,CACVD,WAAY,+DCDd,IAAAE,EAAA,WAEE,SAAAA,YAEAA,EAAA1B,UAAA2B,SAAA,eAJF,oCAAaD,qCAAAA,EAAqBE,UAAA,CAAA,CAAA,uBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,mBAAA,IAAA,CAAA,EAAA,kBAAA,CAAA,QAAA,OAAA,CAAA,aAAA,GAAA,mBAAA,IAAA,CAAA,aAAA,GAAA,kBAAA,GAAA,EAAA,qBAAAC,SAAA,SAAAC,EAAAC,SCPlCC,EAAAA,eAAAA,EAAAA,KAAAA,GAAqBC,EAAAA,OAAAA,EAAAA,iCAA6BC,EAAAA,eAClDF,EAAAA,eAAAA,EAAAA,qBAAAA,GACEC,EAAAA,OAAAA,EAAAA,4DACFC,EAAAA,eACAF,EAAAA,eAAAA,EAAAA,qBAAAA,GACEA,EAAAA,eAAAA,EAAAA,SAAAA,GAAoCC,EAAAA,OAAAA,EAAAA,MAAEC,EAAAA,eACtCF,EAAAA,eAAAA,EAAAA,SAAAA,GAA6DC,EAAAA,OAAAA,EAAAA,OAAGC,EAAAA,eAClEA,EAAAA,sBADqBC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,oBAAAA,oLDCRb,EAAqB,CAAA,MALjCc,EAAAA,gBAAU,CACTC,SAAU,qBACVC,YAAa,kCACbC,UAAW,CAAC,oEEMd,IAAMC,EACU,CAAEC,SAAU,IAAMC,WAAY,CAAC,QAAS,sBCLxDC,EAAA,WAKE,SAAAA,EAA6BpD,GAAAC,KAAAD,KAAAA,EAJ7BC,KAAAoD,gBAAyC,IAAIlD,EAAAA,cAAsB,GACnEF,KAAAqD,YAAa,EACbrD,KAAAsD,IAAiB5D,EAAYE,UAAS,oBAGH,MAA7B2D,aAAaC,eACfxD,KAAKqD,YAAa,EAClBrD,KAAKoD,gBAAgBK,KAAKzD,KAAKqD,aAE7B3D,EAAYE,UAAU8D,SAAS,UAEjC1D,KAAKsD,IAAS5D,EAAYE,UAAS,kCAIvCuD,EAAA/C,UAAAuD,mBAAA,WACE,IAAMC,EAAkBL,aAAaM,QAAQ,gBAE7C,OADsBC,KAAKC,MAAMH,GAAYI,SAlBjD,oCAAab,GAAW7B,EAAAC,SAAAC,EAAAC,kDAAX0B,EAAWzB,QAAXyB,EAAWxB,KAAAC,WAFV,6EAEDuB,EAAW,CAAA,MAHvBtB,EAAAA,iBAAW,CACVD,WAAY,yGCDRW,EAAAA,eAAAA,EAAAA,aAAAA,GACEC,EAAAA,OAAAA,GACFC,EAAAA,uCAF6CE,EAAAA,WAAAA,QAAAA,EAAAA,OAC3CD,EAAAA,UAAAA,GAAAuB,EAAAA,mBAAAA,IAAAA,EAAAA,UAAAA,uBCoEN,SAAAC,EACSC,EACAC,EACUC,EACAC,EACWC,GAL9B,IAAAC,EAAAxE,KACSA,KAAAmE,SAAAA,EACAnE,KAAAoE,OAAAA,EACUpE,KAAAqE,YAAAA,EACArE,KAAAsE,eAAAA,EACWtE,KAAAuE,OAAAA,EAlCdvE,KAAAyE,MAAQ,IACRzE,KAAA0E,OAAS,IACf1E,KAAA2E,YAAsB,EACtB3E,KAAA4E,aAAqC,IAAI1E,EAAAA,aASnDF,KAAA6E,WAAkB,EAClB7E,KAAA8E,QAAkB,aAClB9E,KAAA+E,aAAuB,EACvB/E,KAAAgF,WAAqB,EACrBhF,KAAAM,SAAmB,GACnBN,KAAAiF,SAAmB,EAEnBjF,KAAAkF,OAAoBxF,EAAYE,UAAUuF,QAAQ,OAAQ,MAAK,SAC/DnF,KAAAoF,eAAiB,MACjBpF,KAAAqF,eAAiB,GACjBrF,KAAAsF,UAAiB,KAEjBtF,KAAAuF,UAAY,CACV,CAAEC,MAAO,EAAGC,UAAW,SACvB,CAAED,MAAO,EAAGC,UAAW,WAoFzBzF,KAAA0F,wBAA0B,SAACC,EAAiBC,GAC1CpB,EAAKG,YAAciB,EACnBpB,EAAKI,aAAaiB,KAAKD,IAyFzB5F,KAAA8F,MAAQ,WACNtB,EAAKmB,WAAa,KAClBnB,EAAKuB,OAAS,KACdvB,EAAKwB,cAAgB,KACrBxB,EAAKE,OAAS,IACdF,EAAKC,MAAQ,IACbD,EAAKyB,eAGPjG,KAAAkG,QAAU,WACR1B,EAAKmB,WAAWQ,OAChB3B,EAAK4B,eAAeC,iBACpB7B,EAAKsB,SAjLL9F,KAAKM,SAAWN,KAAKuE,OAAOjE,SACxBZ,EAAYE,UAAU8D,SAAS,UAEjC1D,KAAKkF,OAAYxF,EAAYE,UAAUuF,QAAQ,OAAQ,MAAK,oBAIhEjB,EAAA9D,UAAA2B,SAAA,WAAA,IAAAyC,EAAAxE,KACEA,KAAKsG,OAAS,IAAIC,EAAAA,cAAc,GAKhCvG,KAAKwG,uBAAyBxG,KAAKsE,eAAenE,cAAcsG,WAC9D,WACEjC,EAAK0B,aAGTlG,KAAK0G,wBACH1G,KAAKsE,eAAerE,iBAAiBwG,WAAU,WAC7CjC,EAAKnE,oBAETL,KAAK2G,aAAeC,EAAAA,SAAS,MAC1BhG,KAAKiG,EAAAA,UAAS,WAAM,OAAArC,EAAKF,eAAevD,cAAcyD,EAAKlE,cAC3DmG,aAGLvC,EAAA9D,UAAA0G,gBAAA,WACE9G,KAAKK,kBAGP6D,EAAA9D,UAAA6F,YAAA,WAAA,QAAAzB,EAAAxE,KACEA,KAAK+G,QAAqB,QAAdC,EAAGhH,KAAKiH,cAAM,IAAAD,OAAA,EAAAA,EAAEE,cAAcC,WAAW,MACrDnH,KAAK2F,WAAa,IAAIyB,EAAAA,qBACpBpH,KAAKsG,OACLe,EAAAA,SAASC,IACT,IAAIC,WACJvH,KAAKM,SACL,MACA,GACA,GACA,EACA,EACAN,KAAKqE,YAAYV,qBACjB3D,KAAKkF,QAEPlF,KAAK+F,OAAS,IAAIyB,EAAAA,WAAWxH,KAAKsG,OAAetG,KAAK+G,SACtD/G,KAAKgG,cAAgB,IAAIyB,EAAAA,cACvBzH,KAAKsG,OACLtG,KAAK2F,WACL3F,KAAK+F,QAEP/F,KAAK0H,YAAc,IAAIC,EAAAA,YAAY3H,KAAK+F,OAAQ/F,KAAK2F,WAAY,KACjE3F,KAAKoG,eAAiB,IAAIwB,EAAAA,eAAe5H,KAAK+F,OAAQ/F,KAAK2F,YAE3D3F,KAAK2F,WAAWkC,cAAgB7H,KAAK+F,OAAO+B,YAAYC,KAAK/H,KAAK+F,QAClE/F,KAAK2F,WAAWqC,QAAUhI,KAAK+F,OAAOkC,MAAMF,KAAK/H,KAAK+F,QACtD/F,KAAK2F,WAAWuC,WAAalI,KAAK+F,OAAOoC,cAAcJ,KAAK/H,KAAK+F,QACjE/F,KAAK2F,WAAWyC,cAAgBpI,KAAK+F,OAAOqC,cAAcL,KAAK/H,KAAK+F,QACpE/F,KAAK2F,WAAW0C,eAAiBrI,KAAK0F,wBAAwBqC,KAAK/H,MACnEA,KAAK2F,WAAW2C,QAAUtI,KAAKuI,kBAAkBR,KAAK/H,MACtDA,KAAK+F,OAAOyC,OAASxI,KAAK2F,WAAW8C,KAAKV,KAAK/H,KAAK2F,YACpD3F,KAAK+F,OAAO8B,cAAgB7H,KAAKgG,cAAc8B,YAAYC,KACzD/H,KAAKgG,eAEPhG,KAAK+F,OAAO2C,IAAM1I,KAAKiF,SACvBjF,KAAKsF,UAAYqD,EAAAA,UAAqB,QAAZC,EAAC5I,KAAKiH,cAAM,IAAA2B,OAAA,EAAAA,EAAE1B,cAAe,aACvDlH,KAAKsF,UAAU1E,KAAKiI,EAAAA,aAAa,MAAMpC,WAAU,SAACqC,GACxB,MAApBtE,EAAKkD,aACPlD,EAAKkD,YAAYqB,UAAUD,OAUjC5E,EAAA9D,UAAAmI,kBAAA,WACEvI,KAAK8F,SAGP5B,EAAA9D,UAAA4I,KAAA,WAAA,IAAAxE,EAAAxE,KACEA,KAAKsE,eACFvD,cAAcf,KAAKM,UACnBM,KACCC,EAAAA,YAAW,WAMT,OALA2D,EAAKL,SAAS8E,KACZ,qCACAC,EACAlG,GAEKmG,EAAAA,QAETC,EAAAA,UAAS,gBAEV3C,WAAU,SAAC4C,IACV7E,EAAKK,WAAawE,EAClB7E,EAAKO,YAAcP,EAAK8E,mBACnB9E,EAAKO,cAmBRP,EAAKyB,cACLsD,YAAW,WACT/E,EAAKQ,WAAY,EACjBR,EAAKgF,gBACJ,KAtBHhF,EAAKQ,WAAY,EACFR,EAAKJ,OAAO6E,KAAKnH,GACzB2H,cAAchD,WAAU,SAACiD,GAC1BA,IACFlF,EAAKQ,WAAY,EACjBR,EAAKF,eACFrD,gBAAgBuD,EAAKlE,SAAU,GAC/BM,OACA6F,WAAU,SAAC4C,GACV7E,EAAKyB,cACLsD,YAAW,WACT/E,EAAKQ,WAAY,EACjBR,EAAKgF,gBACJ,iBAcnBtF,EAAA9D,UAAAC,eAAA,WAAA,IAAAmE,EAAAxE,KACEA,KAAKgF,WAAY,EACjBhF,KAAKsE,eACFjE,eAAeL,KAAKM,UACpBM,KACCC,EAAAA,YAAW,WAOT,OANA2D,EAAKL,SAAS8E,KACZ,0BACAC,EACAlG,GAEFwB,EAAKwE,OACEG,EAAAA,QAETC,EAAAA,UAAS,gBAEV3C,WAAU,WAAM,OAAAjC,EAAKwE,WAG1B9E,EAAA9D,UAAAoJ,YAAA,WACyB,MAAnBxJ,KAAK2F,aACP3F,KAAK2F,WAAWsC,MAAM0B,WACtB3J,KAAKoG,eAAewD,iBAIxB1F,EAAA9D,UAAAyJ,iBAAA,WAAA,IAAArF,EAAAxE,KACEA,KAAKkG,UACL4D,EAAAA,MAAM,KAAMrD,WAAU,WACpBjC,EAAKgF,kBAITtF,EAAA9D,UAAAkJ,iBAAA,WACE,OAAsC,IAA/BtJ,KAAK6E,WAAWkF,YAkBzB7F,EAAA9D,UAAA4J,UAAA,WACMhK,KAAKqF,iBAAmBrF,KAAKoF,iBAC/BpF,KAAKoF,eAAiBpF,KAAKqF,iBAI/BnB,EAAA9D,UAAA6J,UAAA,SAAUnB,GACgB,MAApB9I,KAAK0H,aACP1H,KAAK0H,YAAYwC,QAAQpB,IAI7B5E,EAAA9D,UAAA+J,YAAA,SAAYrB,GACc,MAApB9I,KAAK0H,aACP1H,KAAK0H,YAAY0C,UAAUtB,IAI/B5E,EAAA9D,UAAAiK,YAAA,WACMrK,KAAK2G,cACP3G,KAAK2G,aAAa2D,cAEpBtK,KAAKkG,UACDlG,KAAK0G,yBACP1G,KAAK0G,wBAAwB4D,cAE3BtK,KAAKwG,wBACPxG,KAAKwG,uBAAuB8D,qDAzPrBpG,GAAY5C,EAAAiJ,kBAAAC,EAAAC,aAAAnJ,EAAAiJ,kBAAAG,EAAAC,WAAArJ,EAAAiJ,kBAAApH,GAAA7B,EAAAiJ,kBAAAzK,GAAAwB,EAAAiJ,kBAwCb,gDAxCCrG,EAAYlC,UAAA,CAAA,CAAA,YAAA4I,UAAA,SAAAvI,EAAAC,4aDtCzBC,EAAAA,eAAAA,EAAAA,eACEA,EAAAA,eAAAA,EAAAA,kBACEA,EAAAA,eAAAA,EAAAA,aAAWC,EAAAA,OAAAA,EAAAA,wBAAoBC,EAAAA,eAC/BF,EAAAA,eAAAA,EAAAA,aAAAA,GAAYsI,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,SAAAA,IAAAA,CAAsB,iBAAA,WAAA,OAAkBvI,EAAAuH,sBAClDiB,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,aAAAA,GAGFrI,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAF,EAAAA,eAAAA,EAAAA,SAAAA,EAAAA,GAMEsI,EAAAA,WAAAA,WAAAA,SAAAA,GAAAA,OAAWvI,EAAA2H,UAAAc,KAAXF,CAA6B,aAAA,SAAAE,GAAA,OAChBzI,EAAA6H,YAAAY,MACdtI,EAAAA,sBAfeC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,UACqBD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,WASnCD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,QAAAA,EAAAA,MAAAA,CAAe,SAAAL,EAAAoC,8MCyBJR,EAAY,CAAA,MALxBtB,EAAAA,gBAAU,CACTC,SAAU,UACVC,YAAa,uBACbkI,OAAQ,mHA0CLC,EAAAA,aAAO,oBAvC8BhE,OAAM,CAAA,MAA7CiE,EAAAA,gBAAU,SAAU,CAAEC,QAAQ,MAKf1G,MAAK,CAAA,MAApB2G,EAAAA,QACe1G,OAAM,CAAA,MAArB0G,EAAAA,QACSzG,YAAW,CAAA,MAApB0G,EAAAA,SACSzG,aAAY,CAAA,MAArByG,EAAAA,WCxCH,IAAAC,EAAA,WAEE,SAAAA,YAEAA,EAAAlL,UAAA2B,SAAA,eAJF,oCAAauJ,qCAAAA,EAAsBtJ,UAAA,CAAA,CAAA,uBAAAC,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,SCPnCC,EAAAA,eAAAA,EAAAA,OAAKC,EAAAA,OAAAA,EAAAA,kBAAcC,EAAAA,eACnBF,EAAAA,eAAAA,EAAAA,OAAKC,EAAAA,OAAAA,EAAAA,QAAIC,EAAAA,eACTF,EAAAA,eAAAA,EAAAA,UAAQC,EAAAA,OAAAA,EAAAA,MAAEC,EAAAA,+FDKG6I,EAAsB,CAAA,MALlC1I,EAAAA,gBAAU,CACTC,SAAU,qBACVC,YAAa,kCACbC,UAAW,CAAC,mEEEd,IAAAwI,EAAA,WAEE,SAAAA,YAEAA,EAAAnL,UAAA2B,SAAA,eAJF,oCAAawJ,qCAAAA,EAAyBvJ,UAAA,CAAA,CAAA,qBAAAC,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,KAAA0I,OAAA,CAAA,sEAAzBO,EAAyB,CAAA,MALrC3I,EAAAA,gBAAU,CACTC,SAAU,mBACVC,YAAa,gCACbC,UAAW,CAAC,kECGd,IAAAyI,EAAA,WACE,SAAAA,EAA4CnC,GAAArJ,KAAAqJ,KAAAA,SAC5CmC,EAAApL,UAAA2B,SAAA,eAFF,oCAAayJ,GAAsBlK,EAAAiJ,kBACbkB,EAAAA,oDADTD,EAAsBxJ,UAAA,CAAA,CAAA,uBAAAC,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,KAAA0I,OAAA,CAAA,sEAAtBQ,EAAsB,CAAA,MALlC5I,EAAAA,gBAAU,CACTC,SAAU,qBACVC,YAAa,kCACbC,UAAW,CAAC,yFAGCkI,EAAAA,aAAOQ,EAAAA,6BCsHtB,IAAAC,GAAA,+CAAaA,sCAAAA,2CALA,CACT,CAAEC,QAASC,EAAAA,8BAA+BC,SAAU,CAAE5I,SAAU,IAAOC,WAAY,CAAC,UAAW,wBAChG4I,QAAA,CA3EQ,CACPC,EAAAA,iBACAC,EAAAA,oBACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,eACAC,EAAAA,sBACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,kBACAC,EAAAA,iBACAC,EAAAA,kBACAC,EAAAA,mBACAC,EAAAA,kBACAC,EAAAA,eACAC,EAAAA,gBACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,sBACAC,EAAAA,iBACAC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,eACAC,EAAAA,qBACAC,EAAAA,oBACAC,EAAAA,qBACAC,EAAAA,yBACAC,EAAAA,iBACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,mBACAC,EAAAA,gBACAC,EAAAA,oBAGAlC,EAAAA,iBACAC,EAAAA,oBACAC,EAAAA,YACAkB,EAAAA,sBACAM,EAAAA,oBACAtB,EAAAA,eACAC,EAAAA,cACAyB,EAAAA,cACApB,EAAAA,cACAF,EAAAA,sBACAI,EAAAA,iBACAG,EAAAA,kBACAN,EAAAA,eACAE,EAAAA,kBACAG,EAAAA,mBACAR,EAAAA,cACAgB,EAAAA,gBACAT,EAAAA,kBACAK,EAAAA,cACAG,EAAAA,iBACAL,EAAAA,eACAG,EAAAA,cACAF,EAAAA,gBACAO,EAAAA,eACAK,EAAAA,iBACAE,EAAAA,cACAC,EAAAA,mBACAC,EAAAA,gBACAN,EAAAA,qBAAsBC,EAAAA,yBACtBH,EAAAA,qBACAF,EAAAA,iBACAW,EAAAA,mBACA3B,EAAAA,eACAJ,EAAAA,wFAOSR,GAAqB,CAAAwC,aAAA,CAFjB3C,EAA2BzJ,EAAuB0J,GAAsBM,QAAA,CA3ErFC,EAAAA,iBACAC,EAAAA,oBACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,eACAC,EAAAA,sBACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,kBACAC,EAAAA,iBACAC,EAAAA,kBACAC,EAAAA,mBACAC,EAAAA,kBACAC,EAAAA,eACAC,EAAAA,gBACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,sBACAC,EAAAA,iBACAC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,eACAC,EAAAA,qBACAC,EAAAA,oBACAC,EAAAA,qBACAC,EAAAA,yBACAC,EAAAA,iBACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,mBACAC,EAAAA,gBACAC,EAAAA,oBAAkBE,QAAA,CAGlBpC,EAAAA,iBACAC,EAAAA,oBACAC,EAAAA,YACAkB,EAAAA,sBACAM,EAAAA,oBACAtB,EAAAA,eACAC,EAAAA,cACAyB,EAAAA,cACApB,EAAAA,cACAF,EAAAA,sBACAI,EAAAA,iBACAG,EAAAA,kBACAN,EAAAA,eACAE,EAAAA,kBACAG,EAAAA,mBACAR,EAAAA,cACAgB,EAAAA,gBACAT,EAAAA,kBACAK,EAAAA,cACAG,EAAAA,iBACAL,EAAAA,eACAG,EAAAA,cACAF,EAAAA,gBACAO,EAAAA,eACAK,EAAAA,iBACAE,EAAAA,cACAC,EAAAA,mBACAC,EAAAA,gBACAN,EAAAA,qBAAsBC,EAAAA,yBACtBH,EAAAA,qBACAF,EAAAA,iBACAW,EAAAA,mBACA3B,EAAAA,eACAJ,EAAAA,uFAOSR,GAAqB,CAAA,MA/EjC0C,EAAAA,eAAS,CACRtC,QAAS,CACPC,EAAAA,iBACAC,EAAAA,oBACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,eACAC,EAAAA,sBACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,kBACAC,EAAAA,iBACAC,EAAAA,kBACAC,EAAAA,mBACAC,EAAAA,kBACAC,EAAAA,eACAC,EAAAA,gBACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,sBACAC,EAAAA,iBACAC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,eACAC,EAAAA,qBACAC,EAAAA,oBACAC,EAAAA,qBACAC,EAAAA,yBACAC,EAAAA,iBACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,mBACAC,EAAAA,gBACAC,EAAAA,oBAEFE,QAAS,CACPpC,EAAAA,iBACAC,EAAAA,oBACAC,EAAAA,YACAkB,EAAAA,sBACAM,EAAAA,oBACAtB,EAAAA,eACAC,EAAAA,cACAyB,EAAAA,cACApB,EAAAA,cACAF,EAAAA,sBACAI,EAAAA,iBACAG,EAAAA,kBACAN,EAAAA,eACAE,EAAAA,kBACAG,EAAAA,mBACAR,EAAAA,cACAgB,EAAAA,gBACAT,EAAAA,kBACAK,EAAAA,cACAG,EAAAA,iBACAL,EAAAA,eACAG,EAAAA,cACAF,EAAAA,gBACAO,EAAAA,eACAK,EAAAA,iBACAE,EAAAA,cACAC,EAAAA,mBACAC,EAAAA,gBACAN,EAAAA,qBAAsBC,EAAAA,yBACtBH,EAAAA,qBACAF,EAAAA,iBACAW,EAAAA,mBACA3B,EAAAA,eACAJ,EAAAA,qBAEFmC,UAAW,CACT,CAAE1C,QAASC,EAAAA,8BAA+BC,SAAU,CAAE5I,SAAU,IAAOC,WAAY,CAAC,UAAW,wBAEjGgL,aAAc,CAAC3C,EAA2BzJ,EAAuB0J,kBAcnE,IAAA8C,GAAA,WAAA,SAAAA,YACSA,EAAAC,QAAP,WACE,MAAO,CACLC,SAAUF,EACVD,UAAW,OAJjB,qCAAaC,sCAAAA,0CALF,CACPG,EAAAA,aACA/C,IATSA,uEAYA4C,GAAY,CAAAxC,QAAA,CAJrB2C,EAAAA,aARS/C,IAAqByC,QAAA,CAArBzC,sEAYA4C,GAAY,CAAA,MARxBF,EAAAA,eAAS,CACRF,aAAc,GACdC,QAAS,CAACzC,IACVI,QAAS,CACP2C,EAAAA,aACA/C,mBCzHJ,IAAAgD,GAAA,WACE,SAAAA,EAC8BnK,EACrBH,GADqBpE,KAAAuE,OAAAA,EACrBvE,KAAAoE,OAAAA,SAETsK,EAAAtO,UAAAuO,UAAA,SACEC,EACAnL,GAFF,IAAAe,EAAAxE,KASE,OALA4O,EAAUA,EAAQC,MAAM,CACtBC,WAAY,CACVC,cAAe,UAAU/O,KAAKuE,OAAOyK,aAGlCvL,EAAKwL,OAAOL,GAAShO,KAC1BsO,EAAAA,KACE,SAAC7F,GACC,OAAIA,aAAgB8F,EAAAA,aACX9F,EAEF,QAET,SAAC+F,GAQC,OAPIA,aAAiBC,EAAAA,mBACE,MAAjBD,EAAME,QACR9K,EAAKJ,OAAO6E,KAAKuC,EAAwB,CACvCnC,KAAM,CAAEkG,KAAM,0CAIbC,EAAAA,WAAWJ,UA9B5B,qCAAaV,IAAoBpN,EAAAC,SAErB,aAAWD,EAAAC,SAAAmJ,EAAAC,kDAFV+D,GAAoBhN,QAApBgN,GAAoB/M,uEAApB+M,GAAoB,CAAA,MADhC7M,EAAAA,+DAGIoJ,EAAAA,aAAO,8DCmBZ,SAAAwE,YACgBA,EAAAlB,QAAP,SAAemB,GACpB,MAAO,CACLlB,SAAUiB,EACVpB,UAAW,CACTvO,EACA,CACE6L,QAAS,YACTE,SAAU6D,6CARPD,sCAAAA,2CATA,CACTtM,EACA,CACEwI,QAASgE,EAAAA,kBACTC,SAAUlB,GACVmB,OAAO,IAEV/D,QAAA,CAhBQ,CACPgE,EAAAA,iBACA/D,EAAAA,iBACAgE,EAAAA,cACAzB,GAAaC,UACbyB,EAAAA,6FAaSP,GAAS,CAAAvB,aAAA,CAnBLhK,EAAcoH,GAAsBQ,QAAA,CAEjDgE,EAAAA,iBACA/D,EAAAA,iBACAgE,EAAAA,cAAazB,GAEb0B,EAAAA,yBAAuB7B,QAAA,CAEfjK,qEAWCuL,GAAS,CAAA,MApBrBrB,EAAAA,eAAS,CACRF,aAAc,CAAChK,EAAcoH,GAC7BQ,QAAS,CACPgE,EAAAA,iBACA/D,EAAAA,iBACAgE,EAAAA,cACAzB,GAAaC,UACbyB,EAAAA,yBAEF7B,QAAS,CAACjK,GACV+L,QAAS,CAACC,EAAAA,wBACV7B,UAAW,CACTlL,EACA,CACEwI,QAASgE,EAAAA,kBACTC,SAAUlB,GACVmB,OAAO","sourcesContent":["export const environment = {\r\n    production: false,\r\n    mpsServer: 'https://52.172.14.137/mps',\r\n    rpsServer: 'https://52.172.14.137/rps' \r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from '../environments/environment';\r\nimport { AmtFeaturesResponse, PowerState } from '../models/models';\r\n\r\n@Injectable({\r\n  providedIn: 'platform',\r\n})\r\nexport class KvmService {\r\n  connectKVMSocket: EventEmitter<boolean> = new EventEmitter<boolean>(false);\r\n  stopwebSocket: EventEmitter<boolean> = new EventEmitter<boolean>(false);\r\n\r\n  constructor(private readonly http: HttpClient) {}\r\n\r\n  setAmtFeatures(deviceId: string): Observable<AmtFeaturesResponse> {\r\n    const payload = {\r\n      userConsent: 'none',\r\n      enableKVM: true,\r\n      enableSOL: true,\r\n      enableIDER: true,\r\n    };\r\n    return this.http\r\n      .post<AmtFeaturesResponse>(\r\n        `${environment.mpsServer}/api/v1/amt/features/${deviceId}`,\r\n        payload\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n  getPowerState(deviceId: string): Observable<PowerState> {\r\n    return this.http\r\n      .get<PowerState>(\r\n        `${environment.mpsServer}/api/v1/amt/power/state/${deviceId}`\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n  sendPowerAction(\r\n    deviceId: string,\r\n    action: number,\r\n    useSOL: boolean = false\r\n  ): Observable<any> {\r\n    const payload = {\r\n      method: 'PowerAction',\r\n      action,\r\n      useSOL,\r\n    };\r\n    return this.http\r\n      .post<any>(\r\n        `${environment.mpsServer}/api/v1/amt/power/action/${deviceId}`,\r\n        payload\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amt-power-up-alert',\r\n  templateUrl: './power-up-alert.component.html',\r\n  styleUrls: ['./power-up-alert.component.scss']\r\n})\r\nexport class PowerUpAlertComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Your device is not powered on</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  Do you want to send a power up command to the device?\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>No</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Yes</button>\r\n</mat-dialog-actions>\r\n","import { MatSnackBarConfig } from '@angular/material/snack-bar';\r\n\r\ninterface SnackbarConfigs {\r\n  defaultError: MatSnackBarConfig;\r\n  longError: MatSnackBarConfig;\r\n  quickError: MatSnackBarConfig;\r\n  defaultSuccess: MatSnackBarConfig;\r\n  longSuccess: MatSnackBarConfig;\r\n  quickSuccess: MatSnackBarConfig;\r\n}\r\n\r\nconst SnackbarDefaults: SnackbarConfigs = {\r\n  defaultError: { duration: 3000, panelClass: ['error', 'mat-elevation-z12'] },\r\n  longError: { duration: 10000, panelClass: ['error', 'mat-elevation-z12'] },\r\n  quickError: { duration: 1000, panelClass: ['error', 'mat-elevation-z12'] },\r\n  defaultSuccess: {\r\n    duration: 3000,\r\n    panelClass: ['success', 'mat-elevation-z12'],\r\n  },\r\n  longSuccess: {\r\n    duration: 10000,\r\n    panelClass: ['success', 'mat-elevation-z12'],\r\n  },\r\n  quickSuccess: {\r\n    duration: 1000,\r\n    panelClass: ['success', 'mat-elevation-z12'],\r\n  },\r\n};\r\n\r\nexport default SnackbarDefaults;\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'platform',\r\n})\r\nexport class AuthService {\r\n  loggedInSubject: EventEmitter<boolean> = new EventEmitter<boolean>(false);\r\n  isLoggedIn = false;\r\n  url: string = `${environment.mpsServer}/api/v1/authorize`;\r\n\r\n  constructor(private readonly http: HttpClient) {\r\n    if (localStorage.loggedInUser != null) {\r\n      this.isLoggedIn = true;\r\n      this.loggedInSubject.next(this.isLoggedIn);\r\n    }\r\n    if (environment.mpsServer.includes('/mps')) {\r\n      // handles kong route\r\n      this.url = `${environment.mpsServer}/login/api/v1/authorize`;\r\n    }\r\n  }\r\n\r\n  getLoggedUserToken(): string {\r\n    const loggedUser: any = localStorage.getItem('loggedInUser');\r\n    const token: string = JSON.parse(loggedUser).token;\r\n    return token;\r\n  }\r\n}\r\n","<mat-toolbar>\r\n  <mat-form-field>\r\n    <mat-label>Choose encoding type</mat-label>\r\n    <mat-select [(ngModel)]=\"selected\" (ngModelChange)=\"onEncodingChange()\">\r\n      <mat-option *ngFor=\"let encode of encodings\" [value]=\"encode.value\">\r\n        {{ encode.viewValue }}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</mat-toolbar>\r\n<canvas\r\n  class=\"canvas\"\r\n  #canvas\r\n  [width]=\"width\"\r\n  [height]=\"height\"\r\n  oncontextmenu=\"return false\"\r\n  (mouseup)=\"onMouseup($event)\"\r\n  (mousedown)=\"onMousedown($event)\"\r\n></canvas>\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  AMTDesktop,\r\n  AMTKvmDataRedirector,\r\n  ConsoleLogger,\r\n  DataProcessor,\r\n  IDataProcessor,\r\n  ILogger,\r\n  KeyBoardHelper,\r\n  MouseHelper,\r\n  Protocol,\r\n} from '@open-amt-cloud-toolkit/ui-toolkit/core';\r\nimport { environment } from '../environments/environment';\r\nimport { KvmService } from './kvm.service';\r\nimport { fromEvent, interval, of, Subscription, timer } from 'rxjs';\r\nimport { catchError, finalize, mergeMap, throttleTime } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AuthService } from './auth.service';\r\nimport { PowerUpAlertComponent } from './shared/power-up-alert/power-up-alert.component';\r\nimport SnackbarDefaults from './shared/config/snackBarDefault';\r\n\r\n@Component({\r\n  selector: 'amt-kvm',\r\n  templateUrl: './kvm.component.html',\r\n  styles: [],\r\n})\r\nexport class KvmComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('canvas', { static: false }) canvas: ElementRef | undefined;\r\n  public context!: CanvasRenderingContext2D;\r\n\r\n  // //setting a width and height for the canvas\r\n\r\n  @Input() public width = 400;\r\n  @Input() public height = 400;\r\n  @Output() deviceState: number = 0;\r\n  @Output() deviceStatus: EventEmitter<number> = new EventEmitter<number>();\r\n  stopSocketSubscription!: Subscription;\r\n  startSocketSubscription!: Subscription;\r\n  module: any;\r\n  redirector: any;\r\n  dataProcessor!: IDataProcessor | null;\r\n  mouseHelper!: MouseHelper;\r\n  keyboardHelper!: KeyBoardHelper;\r\n  logger!: ILogger;\r\n  powerState: any = 0;\r\n  btnText: string = 'Disconnect';\r\n  isPoweredOn: boolean = false;\r\n  isLoading: boolean = false;\r\n  deviceId: string = '';\r\n  selected: number = 1;\r\n  timeInterval!: any;\r\n  server: string = `${environment.mpsServer.replace('http', 'ws')}/relay`;\r\n  previousAction = 'kvm';\r\n  selectedAction = '';\r\n  mouseMove: any = null;\r\n\r\n  encodings = [\r\n    { value: 1, viewValue: 'RLE 8' },\r\n    { value: 2, viewValue: 'RLE 16' },\r\n  ];\r\n\r\n  constructor(\r\n    public snackBar: MatSnackBar,\r\n    public dialog: MatDialog,\r\n    private readonly authService: AuthService,\r\n    private readonly devicesService: KvmService,\r\n    @Inject('userInput') public params // public readonly activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.deviceId = this.params.deviceId;\r\n    if (environment.mpsServer.includes('/mps')) {\r\n      //handles kong route\r\n      this.server = `${environment.mpsServer.replace('http', 'ws')}/ws/relay`;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.logger = new ConsoleLogger(1);\r\n    // this.activatedRoute.params.subscribe((params) => {\r\n    //   this.isLoading = true;\r\n    //   this.deviceId = params.id;\r\n    // });\r\n    this.stopSocketSubscription = this.devicesService.stopwebSocket.subscribe(\r\n      () => {\r\n        this.stopKvm();\r\n      }\r\n    );\r\n    this.startSocketSubscription =\r\n      this.devicesService.connectKVMSocket.subscribe(() => {\r\n        this.setAmtFeatures();\r\n      });\r\n    this.timeInterval = interval(15000)\r\n      .pipe(mergeMap(() => this.devicesService.getPowerState(this.deviceId)))\r\n      .subscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setAmtFeatures();\r\n  }\r\n\r\n  instantiate(): void {\r\n    this.context = this.canvas?.nativeElement.getContext('2d');\r\n    this.redirector = new AMTKvmDataRedirector(\r\n      this.logger,\r\n      Protocol.KVM,\r\n      new FileReader(),\r\n      this.deviceId,\r\n      16994,\r\n      '',\r\n      '',\r\n      0,\r\n      0,\r\n      this.authService.getLoggedUserToken(),\r\n      this.server\r\n    );\r\n    this.module = new AMTDesktop(this.logger as any, this.context);\r\n    this.dataProcessor = new DataProcessor(\r\n      this.logger,\r\n      this.redirector,\r\n      this.module\r\n    );\r\n    this.mouseHelper = new MouseHelper(this.module, this.redirector, 200);\r\n    this.keyboardHelper = new KeyBoardHelper(this.module, this.redirector);\r\n\r\n    this.redirector.onProcessData = this.module.processData.bind(this.module);\r\n    this.redirector.onStart = this.module.start.bind(this.module);\r\n    this.redirector.onNewState = this.module.onStateChange.bind(this.module);\r\n    this.redirector.onSendKvmData = this.module.onSendKvmData.bind(this.module);\r\n    this.redirector.onStateChanged = this.onConnectionStateChange.bind(this);\r\n    this.redirector.onError = this.onRedirectorError.bind(this);\r\n    this.module.onSend = this.redirector.send.bind(this.redirector);\r\n    this.module.onProcessData = this.dataProcessor.processData.bind(\r\n      this.dataProcessor\r\n    );\r\n    this.module.bpp = this.selected;\r\n    this.mouseMove = fromEvent(this.canvas?.nativeElement, 'mousemove');\r\n    this.mouseMove.pipe(throttleTime(200)).subscribe((event: any) => {\r\n      if (this.mouseHelper != null) {\r\n        this.mouseHelper.mousemove(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  onConnectionStateChange = (redirector: any, state: number): any => {\r\n    this.deviceState = state;\r\n    this.deviceStatus.emit(state);\r\n  };\r\n\r\n  onRedirectorError(): void {\r\n    this.reset();\r\n  }\r\n\r\n  init(): void {\r\n    this.devicesService\r\n      .getPowerState(this.deviceId)\r\n      .pipe(\r\n        catchError(() => {\r\n          this.snackBar.open(\r\n            `Error retrieving power status`,\r\n            undefined,\r\n            SnackbarDefaults.defaultError\r\n          );\r\n          return of();\r\n        }),\r\n        finalize(() => {})\r\n      )\r\n      .subscribe((data) => {\r\n        this.powerState = data;\r\n        this.isPoweredOn = this.checkPowerStatus();\r\n        if (!this.isPoweredOn) {\r\n          this.isLoading = false;\r\n          const dialog = this.dialog.open(PowerUpAlertComponent);\r\n          dialog.afterClosed().subscribe((result) => {\r\n            if (result) {\r\n              this.isLoading = true;\r\n              this.devicesService\r\n                .sendPowerAction(this.deviceId, 2)\r\n                .pipe()\r\n                .subscribe((data) => {\r\n                  this.instantiate();\r\n                  setTimeout(() => {\r\n                    this.isLoading = false;\r\n                    this.autoConnect();\r\n                  }, 4000);\r\n                });\r\n            }\r\n          });\r\n        } else {\r\n          this.instantiate();\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n            this.autoConnect();\r\n          }, 0);\r\n        }\r\n      });\r\n  }\r\n\r\n  setAmtFeatures(): void {\r\n    this.isLoading = true;\r\n    this.devicesService\r\n      .setAmtFeatures(this.deviceId)\r\n      .pipe(\r\n        catchError(() => {\r\n          this.snackBar.open(\r\n            `Error enabling kvm`,\r\n            undefined,\r\n            SnackbarDefaults.defaultError\r\n          );\r\n          this.init();\r\n          return of();\r\n        }),\r\n        finalize(() => {})\r\n      )\r\n      .subscribe(() => this.init());\r\n  }\r\n\r\n  autoConnect(): void {\r\n    if (this.redirector != null) {\r\n      this.redirector.start(WebSocket);\r\n      this.keyboardHelper.GrabKeyInput();\r\n    }\r\n  }\r\n\r\n  onEncodingChange(): void {\r\n    this.stopKvm();\r\n    timer(1000).subscribe(() => {\r\n      this.autoConnect();\r\n    });\r\n  }\r\n\r\n  checkPowerStatus(): boolean {\r\n    return this.powerState.powerstate === 2;\r\n  }\r\n\r\n  reset = (): void => {\r\n    this.redirector = null;\r\n    this.module = null;\r\n    this.dataProcessor = null;\r\n    this.height = 400;\r\n    this.width = 400;\r\n    this.instantiate();\r\n  };\r\n\r\n  stopKvm = (): void => {\r\n    this.redirector.stop();\r\n    this.keyboardHelper.UnGrabKeyInput();\r\n    this.reset();\r\n  };\r\n\r\n  ngDoCheck(): void {\r\n    if (this.selectedAction !== this.previousAction) {\r\n      this.previousAction = this.selectedAction;\r\n    }\r\n  }\r\n\r\n  onMouseup(event: MouseEvent): void {\r\n    if (this.mouseHelper != null) {\r\n      this.mouseHelper.mouseup(event);\r\n    }\r\n  }\r\n\r\n  onMousedown(event: MouseEvent): void {\r\n    if (this.mouseHelper != null) {\r\n      this.mouseHelper.mousedown(event);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.timeInterval) {\r\n      this.timeInterval.unsubscribe();\r\n    }\r\n    this.stopKvm();\r\n    if (this.startSocketSubscription) {\r\n      this.startSocketSubscription.unsubscribe();\r\n    }\r\n    if (this.stopSocketSubscription) {\r\n      this.stopSocketSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amt-device-toolbar',\r\n  templateUrl: './device-toolbar.component.html',\r\n  styleUrls: ['./device-toolbar.component.css']\r\n})\r\nexport class DeviceToolbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>Device Control</div>\r\n<div>List</div>\r\n<button>tv</button>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amt-are-you-sure',\r\n  templateUrl: './are-you-sure.component.html',\r\n  styleUrls: ['./are-you-sure.component.scss']\r\n})\r\nexport class AreYouSureDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'amt-dialog-content',\r\n  templateUrl: './dialog-content.component.html',\r\n  styleUrls: ['./dialog-content.component.scss'],\r\n})\r\nexport class DialogContentComponent implements OnInit {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { name: string }) {}\r\n  ngOnInit(): void {}\r\n}\r\n","/*********************************************************************\r\n* Copyright (c) Intel Corporation 2021\r\n* SPDX-License-Identifier: Apache-2.0\r\n**********************************************************************/\r\n/* eslint-disable @typescript-eslint/no-extraneous-class */\r\nimport { NgModule, ModuleWithProviders } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\r\nimport { MatGridListModule } from '@angular/material/grid-list'\r\nimport { MatExpansionModule } from '@angular/material/expansion'\r\nimport { MatStepperModule } from '@angular/material/stepper'\r\nimport { MatChipsModule } from '@angular/material/chips'\r\nimport { MatNativeDateModule } from '@angular/material/core'\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { MatCardModule } from '@angular/material/card'\r\nimport { MatDialogModule } from '@angular/material/dialog'\r\nimport { MatListModule } from '@angular/material/list'\r\nimport { MatPaginatorModule } from '@angular/material/paginator'\r\nimport { MatSortModule } from '@angular/material/sort'\r\nimport { MatCheckboxModule } from '@angular/material/checkbox'\r\nimport { MatTooltipModule } from '@angular/material/tooltip'\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete'\r\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar'\r\nimport { MatInputModule } from '@angular/material/input'\r\nimport { MatFormFieldModule } from '@angular/material/form-field'\r\nimport { MatRadioModule } from '@angular/material/radio'\r\nimport { MatSelectModule } from '@angular/material/select'\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar'\r\nimport { MatDatepickerModule } from '@angular/material/datepicker'\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatSidenavModule } from '@angular/material/sidenav'\r\nimport { MatMenuModule } from '@angular/material/menu'\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatTabsModule } from '@angular/material/tabs'\r\nimport { MatTreeModule } from '@angular/material/tree'\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle'\r\n\r\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { FlexLayoutModule } from '@angular/flex-layout'\r\nimport { CdkTableModule } from '@angular/cdk/table'\r\nimport { AreYouSureDialogComponent } from './are-you-sure/are-you-sure.component'\r\nimport { PowerUpAlertComponent } from './power-up-alert/power-up-alert.component'\r\nimport { DialogContentComponent } from './dialog-content/dialog-content.component'\r\n// import { HttpClientModule } from '@angular/common/http'\r\n\r\n@NgModule({\r\n  imports: [\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatTreeModule,\r\n    MatMenuModule,\r\n    CdkTableModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatChipsModule,\r\n    MatSelectModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatAutocompleteModule,\r\n    MatStepperModule,\r\n    MatDialogModule,\r\n    MatSidenavModule,\r\n    MatInputModule,\r\n    MatSlideToggleModule,\r\n    MatDatepickerModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatPaginatorModule\r\n  ],\r\n  exports: [\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatTableModule,\r\n    MatTreeModule,\r\n    MatIconModule,\r\n    MatSortModule,\r\n    MatButtonToggleModule,\r\n    MatTooltipModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    MatMenuModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatProgressBarModule, MatProgressSpinnerModule,\r\n    MatSlideToggleModule,\r\n    MatSidenavModule,\r\n    MatPaginatorModule,\r\n    CdkTableModule,\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: { duration: 30000, panelClass: ['success', 'mat-elevation-z12'] } }\r\n  ],\r\n  declarations: [AreYouSureDialogComponent, PowerUpAlertComponent, DialogContentComponent]\r\n})\r\nexport class OpenAMTMaterialModule {\r\n\r\n}\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [OpenAMTMaterialModule],\r\n  imports: [\r\n    CommonModule,\r\n    OpenAMTMaterialModule\r\n  ]\r\n})\r\nexport class SharedModule {\r\n  static forRoot (): ModuleWithProviders<SharedModule> {\r\n    return {\r\n      ngModule: SharedModule,\r\n      providers: []\r\n    }\r\n  }\r\n}\r\n","import {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { DialogContentComponent } from './shared/dialog-content/dialog-content.component';\r\n\r\n@Injectable()\r\nexport class AuthorizeInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    @Inject('userInput') public params,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.params.authToken}`,\r\n      },\r\n    });\r\n    return next.handle(request).pipe(\r\n      tap(\r\n        (data: any) => {\r\n          if (data instanceof HttpResponse) {\r\n            return data;\r\n          }\r\n          return null;\r\n        },\r\n        (error: any) => {\r\n          if (error instanceof HttpErrorResponse) {\r\n            if (error.status === 401) {\r\n              this.dialog.open(DialogContentComponent, {\r\n                data: { name: 'session time out. Please login again' },\r\n              });\r\n            }\r\n          }\r\n          return throwError(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import {\r\n  NgModule,\r\n  CUSTOM_ELEMENTS_SCHEMA,\r\n  ModuleWithProviders,\r\n  Injectable,\r\n} from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { KvmComponent } from './kvm.component';\r\nimport { DeviceToolbarComponent } from './app/device-toolbar/device-toolbar.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { KvmService } from './kvm.service';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AuthorizeInterceptor } from './authorize.interceptor';\r\n@NgModule({\r\n  declarations: [KvmComponent, DeviceToolbarComponent],\r\n  imports: [\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n    BrowserModule,\r\n    SharedModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n  ],\r\n  exports: [KvmComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [\r\n    AuthService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthorizeInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class KvmModule {\r\n  public static forRoot(param: any): ModuleWithProviders<KvmModule> {\r\n    return {\r\n      ngModule: KvmModule,\r\n      providers: [\r\n        KvmService,\r\n        {\r\n          provide: 'userInput',\r\n          useValue: param,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n"]}