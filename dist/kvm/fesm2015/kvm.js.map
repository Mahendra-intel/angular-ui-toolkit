{"version":3,"file":"kvm.js","sources":["../../../projects/kvm/src/environments/environment.ts","../../../projects/kvm/src/lib/kvm.service.ts","../../../projects/kvm/src/lib/auth.service.ts","../../../projects/kvm/src/lib/kvm.component.ts","../../../projects/kvm/src/lib/kvm.component.html","../../../projects/kvm/src/lib/app/device-toolbar/device-toolbar.component.ts","../../../projects/kvm/src/lib/app/device-toolbar/device-toolbar.component.html","../../../projects/kvm/src/lib/kvm.module.ts","../../../projects/kvm/src/public-api.ts","../../../projects/kvm/src/kvm.ts"],"sourcesContent":["export const environment = {\r\n    production: false,\r\n    mpsServer: 'https://localhost/mps',\r\n    rpsServer: 'https://localhost/rps' \r\n}","import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../environments/environment';\nimport { AmtFeaturesResponse, PowerState } from '../models/models';\n\n@Injectable({\n  providedIn: 'platform',\n})\nexport class KvmService {\n  connectKVMSocket: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n  stopwebSocket: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  constructor(private readonly http: HttpClient) {}\n\n  setAmtFeatures(deviceId: string): Observable<AmtFeaturesResponse> {\n    const payload = {\n      userConsent: 'none',\n      enableKVM: true,\n      enableSOL: true,\n      enableIDER: true,\n    };\n    return this.http\n      .post<AmtFeaturesResponse>(\n        `${environment.mpsServer}/api/v1/amt/features/${deviceId}`,\n        payload\n      )\n      .pipe(\n        catchError((err) => {\n          throw err;\n        })\n      );\n  }\n  getPowerState(deviceId: string): Observable<PowerState> {\n    return this.http\n      .get<PowerState>(\n        `${environment.mpsServer}/api/v1/amt/power/state/${deviceId}`\n      )\n      .pipe(\n        catchError((err) => {\n          throw err;\n        })\n      );\n  }\n  sendPowerAction(\n    deviceId: string,\n    action: number,\n    useSOL: boolean = false\n  ): Observable<any> {\n    const payload = {\n      method: 'PowerAction',\n      action,\n      useSOL,\n    };\n    return this.http\n      .post<any>(\n        `${environment.mpsServer}/api/v1/amt/power/action/${deviceId}`,\n        payload\n      )\n      .pipe(\n        catchError((err) => {\n          throw err;\n        })\n      );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'platform',\r\n})\r\nexport class AuthService {\r\n  loggedInSubject: EventEmitter<boolean> = new EventEmitter<boolean>(false);\r\n  isLoggedIn = false;\r\n  url: string = `${environment.mpsServer}/api/v1/authorize`;\r\n\r\n  constructor(private readonly http: HttpClient) {\r\n    if (localStorage.loggedInUser != null) {\r\n      this.isLoggedIn = true;\r\n      this.loggedInSubject.next(this.isLoggedIn);\r\n    }\r\n    if (environment.mpsServer.includes('/mps')) {\r\n      // handles kong route\r\n      this.url = `${environment.mpsServer}/login/api/v1/authorize`;\r\n    }\r\n  }\r\n\r\n  getLoggedUserToken(): string {\r\n    const loggedUser: any = localStorage.getItem('loggedInUser');\r\n    const token: string = JSON.parse(loggedUser).token;\r\n    return token;\r\n  }\r\n}\r\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  AMTDesktop,\n  AMTKvmDataRedirector,\n  ConsoleLogger,\n  DataProcessor,\n  IDataProcessor,\n  ILogger,\n  KeyBoardHelper,\n  MouseHelper,\n  Protocol,\n} from '@open-amt-cloud-toolkit/ui-toolkit/core';\nimport { environment } from '../environments/environment';\n// import { ActivatedRoute } from '@angular/router';\nimport { KvmService } from './kvm.service';\nimport { fromEvent, interval, of, Subscription, timer } from 'rxjs';\nimport { catchError, finalize, mergeMap, throttleTime } from 'rxjs/operators';\n// import { MatDialog } from '@angular/material/dialog';\n// import { MatSnackBar } from '@angular/material/snack-bar';\n// import { PowerUpAlertComponent } from './shared/power-up-alert/power-up-alert.component';\n// import SnackbarDefaults from './shared/config/snackBarDefault';\nimport { AuthService } from './auth.service'\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'amt-kvm',\n  templateUrl: './kvm.component.html',\n  styles: [],\n})\nexport class KvmComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('canvas', { static: false }) canvas: ElementRef | undefined;\n  public context!: CanvasRenderingContext2D;\n\n  // //setting a width and height for the canvas\n\n  @Input() public width = 400;\n  @Input() public height = 400;\n  @Output() deviceState: number = 0;\n  @Output() deviceStatus: EventEmitter<number> = new EventEmitter<number>();\n  stopSocketSubscription!: Subscription;\n  startSocketSubscription!: Subscription;\n  module: any;\n  redirector: any;\n  dataProcessor!: IDataProcessor | null;\n  mouseHelper!: MouseHelper;\n  keyboardHelper!: KeyBoardHelper;\n  logger!: ILogger;\n  powerState: any = 0;\n  btnText: string = 'Disconnect';\n  isPoweredOn: boolean = false;\n  isLoading: boolean = false;\n  deviceId: string = '';\n  selected: number = 1;\n  timeInterval!: any;\n  server: string = `${environment.mpsServer.replace('http', 'ws')}/relay`;\n  previousAction = 'kvm';\n  selectedAction = '';\n  mouseMove: any = null;\n\n  encodings = [\n    { value: 1, viewValue: 'RLE 8' },\n    { value: 2, viewValue: 'RLE 16' },\n  ];\n\n  constructor(\n    // public snackBar: MatSnackBar,\n    // public dialog: MatDialog,\n    private readonly authService: AuthService,\n    private readonly devicesService: KvmService,\n    public readonly activatedRoute: ActivatedRoute\n  ) {\n    if (environment.mpsServer.includes('/mps')) {\n      //handles kong route\n      this.server = `${environment.mpsServer.replace('http', 'ws')}/ws/relay`;\n    }\n  }\n\n  ngOnInit(): void {\n    this.logger = new ConsoleLogger(1);\n    this.activatedRoute.params.subscribe((params) => {\n      this.isLoading = true;\n      this.deviceId = params.id;\n    });\n    this.stopSocketSubscription = this.devicesService.stopwebSocket.subscribe(\n      () => {\n        this.stopKvm();\n      }\n    );\n    this.startSocketSubscription =\n      this.devicesService.connectKVMSocket.subscribe(() => {\n        this.setAmtFeatures();\n      });\n    this.timeInterval = interval(15000)\n      .pipe(mergeMap(() => this.devicesService.getPowerState(this.deviceId)))\n      .subscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.setAmtFeatures();\n  }\n\n  instantiate(): void {\n    this.context = this.canvas?.nativeElement.getContext('2d');\n    this.redirector = new AMTKvmDataRedirector(\n      this.logger,\n      Protocol.KVM,\n      new FileReader(),\n      this.deviceId,\n      16994,\n      '',\n      '',\n      0,\n      0,\n      this.authService.getLoggedUserToken(),\n      this.server\n    );\n    this.module = new AMTDesktop(this.logger as any, this.context);\n    this.dataProcessor = new DataProcessor(\n      this.logger,\n      this.redirector,\n      this.module\n    );\n    this.mouseHelper = new MouseHelper(this.module, this.redirector, 200);\n    this.keyboardHelper = new KeyBoardHelper(this.module, this.redirector);\n\n    this.redirector.onProcessData = this.module.processData.bind(this.module);\n    this.redirector.onStart = this.module.start.bind(this.module);\n    this.redirector.onNewState = this.module.onStateChange.bind(this.module);\n    this.redirector.onSendKvmData = this.module.onSendKvmData.bind(this.module);\n    this.redirector.onStateChanged = this.onConnectionStateChange.bind(this);\n    this.redirector.onError = this.onRedirectorError.bind(this);\n    this.module.onSend = this.redirector.send.bind(this.redirector);\n    this.module.onProcessData = this.dataProcessor.processData.bind(\n      this.dataProcessor\n    );\n    this.module.bpp = this.selected;\n    this.mouseMove = fromEvent(this.canvas?.nativeElement, 'mousemove');\n    this.mouseMove.pipe(throttleTime(200)).subscribe((event: any) => {\n      if (this.mouseHelper != null) {\n        this.mouseHelper.mousemove(event);\n      }\n    });\n  }\n\n  onConnectionStateChange = (redirector: any, state: number): any => {\n    this.deviceState = state;\n    this.deviceStatus.emit(state);\n  };\n\n  onRedirectorError(): void {\n    this.reset();\n  }\n\n  init(): void {\n    this.devicesService\n      .getPowerState(this.deviceId)\n      .pipe(\n        catchError(() => {\n          // this.snackBar.open(`Error retrieving power status`, undefined, SnackbarDefaults.defaultError)\n          return of();\n        }),\n        finalize(() => {})\n      )\n      .subscribe((data) => {\n        this.powerState = data;\n        this.isPoweredOn = this.checkPowerStatus();\n        if (!this.isPoweredOn) {\n          this.isLoading = false;\n          // const dialog = this.dialog.open(PowerUpAlertComponent);\n          // dialog.afterClosed().subscribe((result) => {\n          //   if (result) {\n          //     this.isLoading = true;\n          //     this.devicesService\n          //       .sendPowerAction(this.deviceId, 2)\n          //       .pipe()\n          //       .subscribe((data) => {\n          //         this.instantiate();\n          //         setTimeout(() => {\n          //           this.isLoading = false;\n          //           this.autoConnect();\n          //         }, 4000);\n          //       });\n          //   }\n          // });\n        } else {\n          this.instantiate();\n          setTimeout(() => {\n            this.isLoading = false;\n            this.autoConnect();\n          }, 0);\n        }\n      });\n  }\n\n  setAmtFeatures(): void {\n    this.isLoading = true;\n    console.log('coming inside in setAmtfeatures');\n    this.devicesService\n      .setAmtFeatures(this.deviceId)\n      .pipe(\n        catchError(() => {\n          // this.snackBar.open(`Error enabling kvm`, undefined, SnackbarDefaults.defaultError)\n          this.init();\n          return of();\n        }),\n        finalize(() => {})\n      )\n      .subscribe(() => this.init());\n  }\n\n  autoConnect(): void {\n    if (this.redirector != null) {\n      this.redirector.start(WebSocket);\n      this.keyboardHelper.GrabKeyInput();\n    }\n  }\n\n  \n  onEncodingChange (): void {\n    this.stopKvm()\n    timer(1000).subscribe(() => {\n      this.autoConnect()\n    })\n  }\n\n  checkPowerStatus(): boolean {\n    return this.powerState.powerstate === 2;\n  }\n\n  reset = (): void => {\n    this.redirector = null;\n    this.module = null;\n    this.dataProcessor = null;\n    this.height = 400;\n    this.width = 400;\n    this.instantiate();\n  };\n\n  stopKvm = (): void => {\n    this.redirector.stop();\n    this.keyboardHelper.UnGrabKeyInput();\n    this.reset();\n  };\n\n  ngDoCheck(): void {\n    if (this.selectedAction !== this.previousAction) {\n      this.previousAction = this.selectedAction;\n    }\n  }\n\n  onMouseup(event: MouseEvent): void {\n    if (this.mouseHelper != null) {\n      this.mouseHelper.mouseup(event);\n    }\n  }\n\n  onMousedown(event: MouseEvent): void {\n    if (this.mouseHelper != null) {\n      this.mouseHelper.mousedown(event);\n    }\n  }\n\n  ngOnDestroy (): void {\n    if (this.timeInterval) {\n      this.timeInterval.unsubscribe()\n    }\n    this.stopKvm()\n    if (this.startSocketSubscription) {\n      this.startSocketSubscription.unsubscribe()\n    }\n    if (this.stopSocketSubscription) {\n      this.stopSocketSubscription.unsubscribe()\n    }\n  }\n}\n","<!-- <amt-device-toolbar></amt-device-toolbar> -->\r\n<div>\r\n    <button style=\"display: block;\"> connect </button>\r\n    <canvas class=\"canvas\" #canvas [width]=\"width\" [height]=\"height\" oncontextmenu=\"return false\" (mouseup)=\"onMouseup($event)\" (mousedown)=\"onMousedown($event)\"></canvas>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'amt-device-toolbar',\n  templateUrl: './device-toolbar.component.html',\n  styleUrls: ['./device-toolbar.component.css']\n})\nexport class DeviceToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>Device Control</div>\n<div>List</div>\n<button>tv</button>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { KvmComponent } from './kvm.component';\nimport { DeviceToolbarComponent } from './app/device-toolbar/device-toolbar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { KvmService } from './kvm.service';\n\n@NgModule({\n  declarations: [KvmComponent, DeviceToolbarComponent],\n  imports: [HttpClientModule, BrowserModule],\n  exports: [KvmComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [AuthService, KvmService],\n})\nexport class KvmModule {}\n","/*\n * Public API Surface of kvm\n */\n\nexport * from './lib/kvm.service';\nexport * from './lib/kvm.component';\nexport * from './lib/kvm.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵlistener","i0.ɵɵadvance","i0.ɵɵproperty"],"mappings":"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"}